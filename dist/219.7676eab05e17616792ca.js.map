{"version":3,"file":"219.7676eab05e17616792ca.js","mappings":"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ACAc,4BACAxR,gBACAsN,cACAC,oBACA1L,0BACAiN,aACAC,iBACAnE,wBACAgE,0BACAkD,oBACApD,uBACAM,oBACAG,uBACAr/B,mBACAC,iBACA+6B,eACA2F,gBACAnB,wBACAlF,yBACAC,4BACAI,qBACAC,iBACA6E,gBACAE,cACAE,sBACAE,eACA7E,cACAD,YACAa,gBACAX,kBACAE,uBACA6E,iBACA/W,cACAkX,sBACA5J,sBACAnN,SACAuS,YACArB,+BACAyH,4BACAC,mBACA/7B,WACA9S,aACA4qC,sBACAC,gBACA4C,iBACAE,yBACAzX,0BACA2S,qBACAiF,eACAD,uBACAG,sBACAC,gBACA/E,uBACA7F,kBACAH,aACAiL,2BACA9X,qBACAuT,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAb,mBACAiF,qCACAxlB,gBACA4hB,2BACA8D,mBACA7tB,mBACAiqB,qBACAC,0BACA4D,kBACAO,cACAC,WACAC,UACAC,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,kBACdC,GAAiB,mBACjBC,GAAkB,qBAClBC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBniB,GAAgB,oCAChBoiB,GAAmC,wBACnCC,GAAuB,cACvBC,GAAa,oBACbC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,yBACX3Z,GAAwB,kBACxB4Z,GAAiB,kBACjBC,GAAiB,qBACjBC,GAAoB,wBACpBC,GAAuB,6BACvBC,GAA4B,6BAC5BC,KACExvC,EAAAA,EAAAA,MAEEi4B,IAAU/3B,EAAAA,EAAAA,KACVD,IAAOwL,EAAAA,EAAAA,KAEP5G,IAAWqN,EAAAA,EAAAA,MACXu9B,IAAav9B,EAAAA,EAAAA,MAEbw9B,IAAmBx9B,EAAAA,EAAAA,OAElBxN,GAASC,KAAWgrC,EAAAA,EAAAA,IAAU,KAC9BC,GAAWC,KAAgBjkC,EAAAA,EAAAA,KAAS,GACrChH,IAAoBkrC,EAAA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I,gBACAqC,KAAMv/I,EAAOw/I,mBAAmBh3H,MAChCg1H,sBACAC,kBACAK,iBACAz0G,UACAud,QACA+2F,gBACAvoF,yBACAu3E,mBACAzmG,iBACAhmB,mBACA+d,eACA+/G,oBACAt4G,YAhPc3lC,CAngDuB0/I,EACzCv0I,UACAw0I,+BACApqF,gCACAC,gCACAuzB,QACAn0B,YACAm9C,aACA8mC,iBACA+G,aACAtT,YACAuT,cACAC,iBACAC,kBACAC,cACAjH,kBACA16H,aACA4hI,iBACAC,0BACApH,yBACAzpC,kBACAyvC,mBACAqB,gBACAC,iBACAzqH,SACA4jH,mBACA18G,UACA48G,iBACAC,gBACAC,aACAG,eACAM,mBACAC,gBACAG,sBACAE,6BACAC,oBACAE,cACAD,kBACAE,eACApzH,kBACAqtC,kBACAsnF,qBACA+C,qBACAhqF,eACA+oF,mBACAnD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACA9+G,gBACAc,kBACAsnF,iBACAE,uBACAj6E,aACAwuG,WACAve,YACA+gB,aACAxwD,iBACA2wD,uBACAmB,sBACA+B,iBACAjsD,kBACAp2E,cACAyhI,mBACAh/H,YACAm9H,mBACAlyG,sBACAq0G,mBACAve,2BACA7gH,mBACAg/H,gBACA78H,YACAyzC,iBACAmvE,oBACAka,oBACAC,sBACA76C,yBACAwoC,qBACAqQ,qBACA4D,wBACAzG,qBACAgD,gBACAD,gBACAnvC,oBACAyvC,0BACA8B,4BACAjC,gCACAE,oCACAmC,uBACA7F,gBACAlQ,eACAnO,yBACAl3B,wBACAo5C,gBACAqC,QACA/B,sBACAC,kBACAp0G,UACAud,QACA+2F,gBACAvoF,yBACAn3B,eACA+/G,oBACArR,oBACAzmG,kBACAhmB,mBACA49H,iBACAp4G,WACA26G,gCAEA,MAAM,uBACJniB,GAAsB,qBACtB5jG,GAAoB,4BACpBgmH,GAA2B,oBAC3BC,GAAmB,+BACnBC,GAA8B,uBAC9BC,GAAsB,sBACtBC,GAAqB,iBACrBz+H,GAAgB,iBAChB0+H,KACE9/I,EAAA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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatTags.module.scss?bf8a","webpack://telegram-t/./src/components/left/main/ChatTags.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/hooks/useStorage.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/animations/useVtn.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/common/helpers/preloadDocumentMedia.ts","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.module.scss?70d3","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.tsx","webpack://telegram-t/./src/components/common/profile/ProfileInfo.module.scss?af06","webpack://telegram-t/./src/components/common/profile/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/hooks/useWorkspaceStorage.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): Complete<StateProps> => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cgAMX02q\",\"tag\":\"oIgI9O0L\",\"tagColorMore\":\"hZDqIz3W\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport styles from './ChatTags.module.scss';\n\nconst MAX_VISIBLE_TAGS = 3;\n\ntype OwnProps = {\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n};\n\nconst ChatTags = ({\n  orderedFolderIds,\n  chatFoldersById,\n}: OwnProps) => {\n  if (!orderedFolderIds) {\n    return undefined;\n  }\n\n  const visibleFolderIds = orderedFolderIds.slice(0, MAX_VISIBLE_TAGS);\n  const remainingCount = orderedFolderIds.length - visibleFolderIds.length;\n\n  return (\n    <div className={styles.wrapper}>\n      {visibleFolderIds.map((folderId) => {\n        const folder = chatFoldersById?.[folderId];\n        return folder && (\n          <div\n            key={folder.id}\n            className={buildClassName(\n              'ChatTags',\n              styles.tag,\n              getApiPeerColorClass({ color: folder.color }),\n            )}\n          >\n            {renderTextWithEntities({\n              text: folder.title.text,\n              entities: folder.title.entities,\n              noCustomEmojiPlayback: folder.noTitleAnimations,\n              emojiSize: 12,\n            })}\n          </div>\n        );\n      })}\n      {remainingCount > 0 && (\n        <div className={`ChatTags ${styles.tag} ${styles.tagColorMore}`}>\n          +\n          {remainingCount}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChatTags);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiChatFolder,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { ALL_FOLDER_ID, UNMUTE_TIMESTAMP } from '../../../config';\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getChatFolderIds } from '../../../util/folderManager';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatTags from './ChatTags';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n  withTags?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  chatFolderIds?: number[];\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  areTagsEnabled?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n  chatFolderIds,\n  orderedFolderIds,\n  chatFoldersById,\n  areTagsEnabled,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n    updateChatMutedState,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const tagFolderIds = useMemo(() => {\n    const chatFolderIdsSet = new Set(chatFolderIds);\n\n    return orderedFolderIds?.filter((id) => {\n      if (!chatFolderIdsSet.has(id)) return undefined;\n\n      const isActive = id === folderId;\n      const isAll = id === ALL_FOLDER_ID;\n\n      const folder = chatFoldersById?.[id];\n      const hasColor = folder?.color !== undefined && folder.color !== -1;\n\n      return !isActive && !isAll && hasColor;\n    });\n  }, [orderedFolderIds, folderId, chatFoldersById, chatFolderIds]);\n\n  const shouldRenderTags = areTagsEnabled && withTags && Boolean(tagFolderIds?.length);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({}),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n    noForumTitle: shouldRenderTags,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    updateChatMutedState({ chatId, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleUnmute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    areTagsEnabled && withTags && 'chat-item-with-tags',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className={buildClassName('info', areTagsEnabled && withTags && 'has-tags')}>\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n            withStatusTextColor={isSelected}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n        {shouldRenderTags && (\n          <ChatTags\n            orderedFolderIds={tagFolderIds}\n            chatFoldersById={chatFoldersById}\n          />\n        )}\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      } as Complete<StateProps>;\n    }\n\n    const chatFolderIds = getChatFolderIds(chatId);\n    const { areTagsEnabled } = global.chatFolders;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastMessageOutgoingStatus: isOutgoing && lastMessage ? selectOutgoingStatus(global, lastMessage) : undefined,\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      isAccountFrozen,\n      monoforumChannel,\n      chatFolderIds,\n      orderedFolderIds: global.chatFolders.orderedIds,\n      chatFoldersById: global.chatFolders.byId,\n      areTagsEnabled: areTagsEnabled && isPremium,\n    };\n  },\n)(Chat));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm || switchWebview) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  threadId?: ThreadId;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, threadId, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({\n                  chatId: message.chatId, messageId: message.id, threadId, button,\n                })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): Complete<StateProps> => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n\n    const message = chatId ? selectChatMessage(global, chatId, messageId) : undefined;\n    return {\n      message,\n    };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          noCaptions={noCaptions}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): Complete<StateProps> => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo, useRef, useSignal, useState } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type { GlobalState, TabState } from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList,\n    ),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((\n    newHtml: string, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount && !shouldPrepend) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    if (shouldPrepend) {\n      const newFirstWord = newHtml.split(' ')[0];\n      const shouldReplace = getHtml().startsWith(newFirstWord);\n\n      setHtml(shouldReplace ? newHtml : `${newHtml}${getHtml()}`);\n    } else {\n      setHtml(`${getHtml()}${newHtml}`);\n    }\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId, shouldPrepend);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft, undefined, true);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        },\n      );\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = selectCustomEmoji(getGlobal(), reaction.documentId);\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"scheduled\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              threadId={threadId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): Complete<StateProps> => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setColor'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'setColor':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          color: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidthWithText(isMobile: boolean) {\n  return (isMobile ? 14 : 20) * REM;\n}\n\nexport function getMinMediaWidth(text: string = '', isMobile: boolean, hasCommentButton?: boolean) {\n  return text.length > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? getMinMediaWidthWithText(isMobile)\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText, isMobile);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { useCallback, useEffect, useState } from '../lib/teact/teact';\n\ntype UseLocalStorageProps<T> = {\n  key: string;\n  initValue: T;\n};\n\nexport function useLocalStorage<T>({ key, initValue }: UseLocalStorageProps<T>):\n[value: T, setValue: (val: T) => void] {\n  const eventName = `update_storage_${key}`;\n\n  const getStoredValue: () => (T | undefined) = useCallback(() => {\n    const value = localStorage.getItem(key);\n    if (value !== null) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        console.error((e as Error).message);\n      }\n    }\n    return undefined;\n  }, [key]);\n\n  const writeValue: (value: T) => void = useCallback((value) => {\n    const stringifiedValue = JSON.stringify(value);\n    if (localStorage.getItem(key) !== stringifiedValue) {\n      localStorage.setItem(key, stringifiedValue);\n      window.dispatchEvent(new Event(eventName));\n    }\n  }, [eventName, key]);\n\n  const restoreValue: () => T = useCallback(() => {\n    const storedValue = getStoredValue();\n    if (storedValue !== undefined) {\n      return storedValue;\n    } else {\n      writeValue(initValue);\n      return initValue;\n    }\n  }, [getStoredValue, writeValue, initValue]);\n\n  const [state, setState] = useState<T>(restoreValue());\n\n  useEffect(() => {\n    const listenStorageChange = () => {\n      setState(restoreValue());\n    };\n    window.addEventListener(eventName, listenStorageChange);\n    return () => window.removeEventListener(eventName, listenStorageChange);\n  }, [eventName, restoreValue]);\n\n  const setStateSafe = (value: T) => {\n    try {\n      writeValue(value);\n    } catch (e) {\n      console.error((e as Error).message);\n    }\n  };\n\n  return [state, setStateSafe];\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage,\n  getMessageTextWithFallback,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageTextWithFallback(lang, message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(oldLang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import buildStyle from '../../util/buildStyle';\nimport useLastCallback from '../useLastCallback';\nimport useUniqueId from '../useUniqueId';\n\nconst VTN_PROPERTY_NAME = '--_vtn';\n\nCSS.registerProperty?.({\n  name: VTN_PROPERTY_NAME,\n  syntax: '*',\n  inherits: false,\n});\n\nexport function useVtn(uniqueId?: string) {\n  const fallbackId = useUniqueId();\n\n  // Pass `true` to use the same class name as the name parameter\n  const createVtnStyle = useLastCallback((name: string, vtClass?: string | boolean) => {\n    const vtClassString = vtClass === true ? name : (vtClass || undefined);\n    return buildStyle(\n      `${VTN_PROPERTY_NAME}: vtn-${name}-${uniqueId || fallbackId}`,\n      vtClassString && `view-transition-class: ${vtClassString}`,\n    );\n  });\n\n  return {\n    createVtnStyle,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">{lang('FileDropZoneTitle')}</div>\n        {!isGeneric && (\n          <div className=\"description\">\n            {isQuick ? lang('FileDropZoneQuick') : lang('FileDropZoneNoCompression')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const value = useMemo(() => {\n    if (age) {\n      return lang(\n        `ProfileBirthday${isToday ? 'Today' : ''}ValueYear`,\n        { date: formattedDate, age },\n        { pluralValue: age },\n      );\n    }\n\n    return lang(`ProfileBirthday${isToday ? 'Today' : ''}Value`, { date: formattedDate });\n  }, [age, formattedDate, isToday, lang]);\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(value)}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH, MUTE_INDEFINITE_TIMESTAMP, UNMUTE_TIMESTAMP,\n} from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n  className?: string;\n  style?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n  className,\n  style,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleToggleNotifications = useLastCallback(() => {\n    const mutedUntil = isMuted ? UNMUTE_TIMESTAMP : MUTE_INDEFINITE_TIMESTAMP;\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        mutedUntil,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, mutedUntil });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatExtra', className)} style={style}>\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon={isMuted ? 'mute' : 'unmute'} narrow ripple onClick={handleToggleNotifications}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={lang(userId ? 'AriaToggleUserNotifications' : 'AriaToggleChatNotifications')}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): Complete<StateProps> => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_TAURI } from '../util/browser/globalEnvironment';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_TAURI ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics, handleUnmute,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      } as Complete<StateProps>;\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): Complete<StateProps> => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds, getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\nimport { useWorkspaceStorage } from '../../../hooks/useWorkspaceStorage';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  withTags?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps & StateProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n  withTags,\n  currentUserId,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n    toggleFocusList,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n  const { currentWorkspaceId, excludeOtherWorkspaces, savedWorkspaces } = useWorkspaceStorage();\n\n  const EVERYTHING_WORKSPACE_ID = '0';\n  \n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  \n  const foldersFromWorkspaces = useMemo(() => savedWorkspaces.flatMap(w => w.foldersIds), [savedWorkspaces]);\n  const shouldFilterByWorkspace = isAllFolder && currentWorkspaceId === EVERYTHING_WORKSPACE_ID && excludeOtherWorkspaces;\n\n  const filteredOrderedIds = useMemo(() => {\n    const orderedIdsWithoutSelf = orderedIds?.filter((chatId) => chatId !== currentUserId);\n\n    if (!shouldFilterByWorkspace || !orderedIdsWithoutSelf) {\n      return orderedIdsWithoutSelf;\n    }\n\n    return orderedIdsWithoutSelf.filter((chatId) => {\n      return !foldersFromWorkspaces.some(folderId => {\n        const folderChatIds = getOrderedIds(folderId);\n        return folderChatIds?.includes(chatId);\n      });\n    });\n  }, [orderedIds, shouldFilterByWorkspace, foldersFromWorkspaces, currentUserId]);\n\n  const chatsHeight = (filteredOrderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(filteredOrderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, filteredOrderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && filteredOrderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds: filteredOrderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds: filteredOrderedIds });\n    },\n    'Mod+P': (e: KeyboardEvent) => {\n      e.preventDefault();\n      toggleFocusList();\n    },\n  } : undefined), [isActive, filteredOrderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !filteredOrderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > filteredOrderedIds!.length - 1) return;\n\n        openChat({ id: filteredOrderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, filteredOrderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  function renderChats() {\n    const viewportOffset = filteredOrderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n          withTags={withTags}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(ChatList));\n\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            asMessageBubble={Boolean(monoforumChannel)}\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n  noForumTitle?: boolean;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n  noForumTitle,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {\n        !noForumTitle && (\n          <>\n            {lastActiveTopic && (\n              <div className={styles.titleRow}>\n                <div\n                  className={buildClassName(\n                    styles.mainColumn,\n                    lastActiveTopic.unreadCount && styles.unread,\n                  )}\n                  ref={mainColumnRef}\n                  onClick={handleOpenTopicClick}\n                  onMouseDown={handleOpenTopicMouseDown}\n                >\n                  <TopicIcon\n                    topic={lastActiveTopic}\n                    observeIntersection={observeIntersection}\n                  />\n                  <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n                  {!overwrittenWidth && isReversedCorner && (\n                    <div className={styles.afterWrapper}>\n                      <div className={styles.after} />\n                    </div>\n                  )}\n                </div>\n\n                <div className={styles.otherColumns}>\n                  {otherTopics.map((topic) => (\n                    <div\n                      className={buildClassName(\n                        styles.otherColumn, topic.unreadCount && styles.unread,\n                      )}\n                      key={topic.id}\n                    >\n                      <TopicIcon\n                        topic={topic}\n                        className={styles.otherColumnIcon}\n                        observeIntersection={observeIntersection}\n                      />\n                      <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.ellipsis} />\n              </div>\n            )}\n            {!lastActiveTopic && (\n              <div className={buildClassName(styles.titleRow, styles.loading)}>\n                {lang('Loading')}\n              </div>\n            )}\n          </>\n        )\n      }\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && !noForumTitle && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n  noForumTitle,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n  noForumTitle?: boolean;\n}) {\n  const lang = useLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('ChatDraftPrefix')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(lang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n          noForumTitle={noForumTitle}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): Complete<StateProps> => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { getGlobal, setGlobal } from '../../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../../api/types';\n\nimport {\n  getDocumentMediaHash, getMediaFormat, getMessageDocumentPhoto, getMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { updateChatMessage } from '../../../global/reducers';\nimport { selectChatMessage } from '../../../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { preloadImage, preloadVideo } from '../../../util/files';\nimport { fetch } from '../../../util/mediaLoader';\nimport LimitedMap from '../../../util/primitives/LimitedMap';\n\nconst preloadedHashes = new LimitedMap<string, void>(100);\n\nexport async function preloadDocumentMedia(mediaContainer: ApiMessage) {\n  const video = getMessageDocumentVideo(mediaContainer);\n  const photo = getMessageDocumentPhoto(mediaContainer);\n\n  const media = video || photo;\n\n  // Skip large photos that were not processed by the server\n  const shouldSkipPhoto = photo && photo.mediaSize && !photo.mediaSize.fromDocumentAttribute;\n  if (!media || media.previewBlobUrl || shouldSkipPhoto) {\n    return;\n  }\n\n  const hash = getDocumentMediaHash(media, 'full');\n  if (!hash || preloadedHashes.has(hash)) {\n    return;\n  }\n\n  preloadedHashes.set(hash, undefined);\n\n  const url = await fetch(hash, getMediaFormat(media, 'full'));\n  if (!url) {\n    return;\n  }\n\n  let dimensions: ApiDocument['mediaSize'] | undefined;\n\n  if (video && IS_PROGRESSIVE_SUPPORTED) {\n    const videoEl = await preloadVideo(url);\n    dimensions = { width: videoEl.videoWidth, height: videoEl.videoHeight, fromPreload: true };\n  }\n\n  if (photo) {\n    const img = await preloadImage(url);\n    dimensions = { width: img.naturalWidth, height: img.naturalHeight, fromPreload: true };\n  }\n\n  if (!dimensions || dimensions.width <= 0 || dimensions.height <= 0) {\n    return;\n  }\n\n  let global = getGlobal();\n  const message = selectChatMessage(global, mediaContainer.chatId, mediaContainer.id);\n  if (!message || !message.content.document) return;\n  global = updateChatMessage(global, mediaContainer.chatId, mediaContainer.id, {\n    content: {\n      ...message.content,\n      document: {\n        ...message.content.document,\n        mediaSize: dimensions,\n      },\n    },\n  });\n  setGlobal(global);\n}\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport { preloadDocumentMedia } from './helpers/preloadDocumentMedia';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, timestamp, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && document.mediaSize\n    && !document.mediaSize.fromDocumentAttribute && !document.mediaSize.fromPreload;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  useEffect(() => {\n    const fileEl = ref.current;\n    if (!withMediaViewer || !fileEl || !message) return;\n\n    const onHover = () => {\n      preloadDocumentMedia(message);\n    };\n\n    fileEl.addEventListener('mouseenter', onHover);\n\n    return () => {\n      fileEl.removeEventListener('mouseenter', onHover);\n    };\n  }, [withMediaViewer, message]);\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): Complete<StateProps> => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const mediaData = mediaHash\n    ? (isStreaming ? mediaLoader.getProgressiveUrl(mediaHash)\n      : mediaLoader.getFromMemory(mediaHash)) : undefined;\n\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectCustomEmoji, selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = selectCustomEmoji(global, documentId);\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            spellCheck={IS_TAURI ? false : undefined}\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): Complete<StateProps> => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): Complete<StateProps> => {\n    if (!typingStatus.userId) {\n      return { typingUser: undefined };\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport Spinner from '../../ui/Spinner';\nimport Icon from '../icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  className?: string;\n  style?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  className,\n  style,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              draggable={false}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n    className,\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined} style={style}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dspICZx5\",\"gift\":\"GtRefNqT\",\"fadeOut\":\"CviSFYWp\",\"fadeIn\":\"zARAyL86\"};","import { memo, useMemo, useRef } from '@teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSavedStarGift } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { clamp } from '../../../util/math';\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftEffectWrapper from '../gift/GiftEffectWrapper';\nimport StickerView from '../StickerView';\n\nimport styles from './ProfilePinnedGifts.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  className?: string;\n  gifts?: ApiSavedStarGift[];\n  isExpanded?: boolean;\n  withGlow?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 2 * REM;\nconst POSITIONS = [\n  { x: -0.2, y: -0.3 },\n  { x: 0.3, y: 0.1 },\n  { x: -0.4, y: -0.1 },\n  { x: 0.4, y: -0.1 },\n  { x: -0.25, y: 0.1 },\n  { x: 0.25, y: -0.25 },\n];\n\nconst CENTER = { x: 0.5, y: 0.5 };\n\nconst ProfilePinnedGifts = ({\n  peerId,\n  gifts,\n  isExpanded,\n  className,\n  withGlow,\n}: OwnProps) => {\n  const { createVtnStyle } = useVtn();\n\n  if (!gifts) return undefined;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {gifts.slice(0, POSITIONS.length).map((gift, index) => {\n        const position = !isExpanded ? POSITIONS[index] : getExpandedPosition(POSITIONS[index]);\n        const style = buildStyle(\n          `top: ${(CENTER.y + position.y) * 100}%`,\n          `left: ${(CENTER.x + position.x) * 100}%`,\n        );\n        return (\n          <PinnedGift\n            peerId={peerId}\n            className={styles.gift}\n            key={gift.gift.id}\n            gift={gift}\n            style={buildStyle(style, createVtnStyle(`profilePinnedGift${index}`, 'profilePinnedGift'))}\n            withGlow={withGlow}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nfunction getExpandedPosition(position: { x: number; y: number }) {\n  return {\n    x: clamp(position.x * 1.5, -0.45, 0.45),\n    y: clamp(position.y * 1.5, -0.45, 0.45),\n  };\n}\n\nconst PinnedGift = ({\n  gift, style, className, withGlow, peerId,\n}: {\n  gift: ApiSavedStarGift;\n  style?: string;\n  className?: string;\n  withGlow?: boolean;\n  peerId: string;\n}) => {\n  const { openGiftInfoModal } = getActions();\n\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift.gift);\n  }, [gift]);\n\n  const handleClick = useLastCallback(() => {\n    openGiftInfoModal({ peerId, gift });\n  });\n\n  if (!giftAttributes?.model || !giftAttributes.backdrop) return undefined;\n\n  return (\n    <GiftEffectWrapper\n      withSparkles\n      sparklesColor={giftAttributes.backdrop.textColor}\n      glowColor={withGlow ? giftAttributes.backdrop.edgeColor : undefined}\n      ref={stickerRef}\n      className={className}\n      style={style}\n      onClick={handleClick}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={giftAttributes.model.sticker}\n        size={GIFT_STICKER_SIZE}\n        withTranslucentThumb\n        noPlay\n      />\n    </GiftEffectWrapper>\n  );\n};\n\nexport default memo(ProfilePinnedGifts);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Z_HM0Jqg\",\"plain\":\"YIhgPXW6\",\"minimized\":\"blI_IH7j\",\"userRatingNegativeWrapper\":\"vuUzgWI1\",\"userRatingWrapper\":\"P6tsZMON\",\"fallbackPhoto\":\"eZ2DGNou\",\"fallbackPhotoContents\":\"ldzIKEUp\",\"fallbackPhotoVisible\":\"uNvH08Qp\",\"fallbackPhotoAvatar\":\"a9OwsvOP\",\"photoWrapper\":\"UZ7NDj8N\",\"photoDashes\":\"e7iOf_3T\",\"photoDash\":\"eD0Is6TL\",\"photoDash_current\":\"MSdiAM06\",\"photoDashCurrent\":\"MSdiAM06\",\"navigation\":\"Yr9FHqbF\",\"navigation_prev\":\"Z1ZX2xot\",\"navigationPrev\":\"Z1ZX2xot\",\"navigation_next\":\"X0stLWTl\",\"navigationNext\":\"X0stLWTl\",\"info\":\"ZFBuRDGK\",\"status\":\"XxRtPe_4\",\"title\":\"atYgxkWV\",\"ratingIcon\":\"Yvu9iM5n\",\"ratingNegativeIcon\":\"JZBCjHv0\",\"ratingLevel\":\"eFsZljMG\",\"userStatus\":\"F4JyLH2c\",\"getStatus\":\"wCXGPPTY\",\"topicContainer\":\"dNcezQH8\",\"topicTitle\":\"hjk4U031\",\"topicIcon\":\"YwVcTLvK\",\"topicIconTitle\":\"_sQEevF7\",\"topicMessagesCounter\":\"GXxwbzqF\",\"radialPatternBackground\":\"BvunKb6r\",\"standaloneAvatar\":\"rLHO_VQT\",\"activeProfilePhoto\":\"yltXKQri\",\"pinnedGifts\":\"JX3wjADD\",\"fadeOut\":\"wh7RALk1\",\"profileExpandAvatar\":\"KtpaSfR5\",\"fadeIn\":\"qD_LMATM\",\"profileCollapseAvatar\":\"c1xe6OKs\"};","import { memo, useEffect, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiEmojiStatusType,\n  ApiPeerColorOption,\n  ApiPeerPhotos,\n  ApiPeerProfileColorSet,\n  ApiSavedGifts,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUserStatus,\n} from '../../../api/types/index';\nimport type { IconName } from '../../../types/icons/index';\nimport type { AnimationLevel, ThemeKey } from '../../../types/index';\nimport { MediaViewerOrigin } from '../../../types/index';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../../global/helpers/index';\nimport { getActions, withGlobal } from '../../../global/index';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectPeer,\n  selectPeerHasProfileBackground,\n  selectPeerPhotos,\n  selectPeerProfileColor,\n  selectPeerSavedGifts,\n  selectTabState,\n  selectTheme,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../../global/selectors/index';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { resolveTransitionName } from '../../../util/resolveTransitionName';\nimport renderText from '../helpers/renderText.tsx';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useIntervalForceUpdate from '../../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\nimport usePhotosPreload from '../hooks/usePhotosPreload';\n\nimport Transition from '../../ui/Transition.tsx';\nimport Avatar from '../Avatar.tsx';\nimport FullNameTitle from '../FullNameTitle.tsx';\nimport Icon from '../icons/Icon.tsx';\nimport TopicIcon from '../TopicIcon.tsx';\nimport ProfilePhoto from './ProfilePhoto';\nimport ProfilePinnedGifts from './ProfilePinnedGifts.tsx';\nimport RadialPatternBackground from './RadialPatternBackground.tsx';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\nconst MAX_LEVEL_ICON = 90;\n\ntype OwnProps = {\n  isExpanded?: boolean;\n  peerId: string;\n  isForSettings?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userFullInfo?: ApiUserFullInfo;\n  userStatus?: ApiUserStatus;\n  chat?: ApiChat;\n  mediaIndex?: number;\n  avatarOwnerId?: string;\n  topic?: ApiTopic;\n  messagesCount?: number;\n  animationLevel: AnimationLevel;\n  emojiStatus?: ApiEmojiStatusType;\n  emojiStatusSticker?: ApiSticker;\n  emojiStatusSlug?: string;\n  profilePhotos?: ApiPeerPhotos;\n  profileColorOption?: ApiPeerColorOption<ApiPeerProfileColorSet>;\n  theme: ThemeKey;\n  isPlain?: boolean;\n  savedGifts?: ApiSavedGifts;\n};\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\nconst PATTERN_COLOR = '#000000';\nconst PATTERN_SIZE_FACTOR = 0.75;\nconst PATTERN_OPACITY = 0.75;\n\nconst ProfileInfo = ({\n  isExpanded,\n  isForSettings,\n  canPlayVideo,\n  user,\n  userFullInfo,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatus,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n  profileColorOption,\n  theme,\n  isPlain,\n  savedGifts,\n}: OwnProps & StateProps) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n    openProfileRatingModal,\n    loadPeerSavedGifts,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const { createVtnStyle } = useVtn();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  const collectibleEmojiStatus = emojiStatus?.type === 'collectible' ? emojiStatus : undefined;\n\n  const peer = user || chat;\n  const { customEmoji: backgroundEmoji } = useCustomEmoji(\n    collectibleEmojiStatus?.patternDocumentId || peer?.profileColor?.backgroundEmojiId,\n  );\n\n  const profileColorSet = useMemo(() => {\n    if (collectibleEmojiStatus) {\n      return {\n        bgColors: [collectibleEmojiStatus.centerColor, collectibleEmojiStatus.edgeColor],\n        storyColors: [collectibleEmojiStatus.textColor, collectibleEmojiStatus.textColor],\n      };\n    }\n\n    const colors = profileColorOption\n      && (theme === 'dark' ? profileColorOption.darkColors : profileColorOption.colors);\n    if (!colors) return undefined;\n\n    // Why are they reversed on the server?\n    return {\n      bgColors: [...colors.bgColors].reverse(),\n      storyColors: [...colors.storyColors].reverse(),\n    };\n  }, [profileColorOption, theme, collectibleEmojiStatus]);\n\n  const pinnedGifts = useMemo(() => {\n    return savedGifts?.gifts.filter((gift) => {\n      if (gift.gift.type === 'starGiftUnique') {\n        return gift.isPinned && gift.gift.slug !== collectibleEmojiStatus?.slug;\n      }\n\n      return gift.isPinned;\n    });\n  }, [savedGifts, collectibleEmojiStatus?.slug]);\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  useEffect(() => {\n    loadPeerSavedGifts({ peerId });\n  }, [peerId]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  // Reset photo index when collapsing\n  useEffect(() => {\n    if (!isExpanded) {\n      setCurrentPhotoIndex(0);\n    }\n  }, [isExpanded]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: isForSettings ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  const handleRatingClick = useLastCallback((level: number) => {\n    if (user) {\n      openProfileRatingModal({ userId: user.id, level });\n    }\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        className={buildClassName(isActive && styles.activeProfilePhoto)}\n        style={isActive ? createVtnStyle('avatar', true) : undefined}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderUserRating() {\n    if (!userFullInfo?.starsRating) return undefined;\n\n    const level = userFullInfo.starsRating.level;\n    const isNegative = level < 0;\n\n    const onRatingClick = () => handleRatingClick(level);\n\n    if (isNegative) {\n      return (\n        <span role=\"button\" tabIndex={0} className={styles.userRatingNegativeWrapper} onClick={onRatingClick}>\n          <Icon\n            name=\"rating-icons-negative\"\n            className={styles.ratingNegativeIcon}\n          />\n          <span className={styles.ratingLevel}>!</span>\n        </span>\n      );\n    }\n\n    const safeLevel = Math.max(level, 1);\n    const iconLevel = Math.min(safeLevel, MAX_LEVEL_ICON);\n    const iconName = (iconLevel < 10\n      ? `rating-icons-level${iconLevel}`\n      : `rating-icons-level${Math.floor(iconLevel / 10) * 10}`) as IconName;\n\n    return (\n      <span role=\"button\" tabIndex={0} className={styles.userRatingWrapper} onClick={onRatingClick}>\n        <Icon\n          name={iconName}\n          className={styles.ratingIcon}\n        />\n        <span className={styles.ratingLevel}>{level}</span>\n      </span>\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span\n          className={buildClassName(styles.status, 'status')}\n          dir=\"auto\"\n          style={createVtnStyle('status', true)}\n        >\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n          style={createVtnStyle('status', true)}\n        >\n          {renderUserRating()}\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span\n        className={buildClassName(styles.status, 'status')}\n        dir=\"auto\"\n        style={createVtnStyle('status', true)}\n      >\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        'ProfileInfo',\n        styles.root,\n        !isExpanded && styles.minimized,\n        isPlain && styles.plain,\n      )}\n      style={buildStyle(\n        profileColorSet && `--rating-outline-color: ${isExpanded ? 'transparent' : profileColorSet?.bgColors[1]}`,\n        profileColorSet && !isExpanded && `--rating-text-color: ${profileColorSet?.bgColors[1]}`,\n        createVtnStyle('profileInfo', true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {profileColorSet?.bgColors && (\n        <RadialPatternBackground\n          backgroundColors={profileColorSet.bgColors}\n          patternIcon={backgroundEmoji}\n          patternColor={collectibleEmojiStatus?.patternColor || PATTERN_COLOR}\n          className={styles.radialPatternBackground}\n          patternSize={PATTERN_SIZE_FACTOR}\n          patternOpacity={collectibleEmojiStatus ? 1 : PATTERN_OPACITY}\n        />\n      )}\n      {pinnedGifts && (\n        <ProfilePinnedGifts\n          peerId={peerId}\n          gifts={pinnedGifts}\n          isExpanded={isExpanded}\n          className={styles.pinnedGifts}\n          withGlow={!isPlain}\n        />\n      )}\n      {isExpanded && (\n        <div className={styles.photoWrapper} style={createVtnStyle('photoWrapper', true)}>\n          {renderPhotoTabs()}\n          {!isForSettings && profilePhotos?.personalPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              isFirst && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents}>\n                {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n              </div>\n            </div>\n          )}\n          {isForSettings && profilePhotos?.fallbackPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              (isFirst || isLast) && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n                {!isLast && (\n                  <Avatar\n                    photo={profilePhotos.fallbackPhoto}\n                    className={styles.fallbackPhotoAvatar}\n                    size=\"mini\"\n                  />\n                )}\n                {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n              </div>\n            </div>\n          )}\n          <Transition\n            activeKey={currentPhotoIndex}\n            name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, lang.isRtl)}\n          >\n            {renderPhoto}\n          </Transition>\n\n          {!isFirst && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_prev)}\n              aria-label={oldLang('AccDescrPrevious')}\n              onClick={selectPreviousMedia}\n            />\n          )}\n          {!isLast && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_next)}\n              aria-label={oldLang('Next')}\n              onClick={selectNextMedia}\n            />\n          )}\n        </div>\n      )}\n      {!isExpanded && (\n        <Avatar\n          className={styles.standaloneAvatar}\n          key={peer?.id}\n          size=\"jumbo\"\n          peer={peer}\n          style={createVtnStyle('avatar', true)}\n          onClick={isForSettings ? handleProfilePhotoClick : undefined}\n        />\n      )}\n\n      <div\n        className={styles.info}\n        dir={lang.isRtl ? 'rtl' : 'auto'}\n        style={createVtnStyle('info', true)}\n      >\n        {(user || chat) && (\n          <FullNameTitle\n            className={styles.title}\n            style={createVtnStyle('title', true)}\n            peer={(user || chat)!}\n            withEmojiStatus\n            withStatusTextColor\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): Complete<StateProps> => {\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const userFullInfo = user ? selectUserFullInfo(global, peerId) : undefined;\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = peer?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? selectCustomEmoji(global, emojiStatus.documentId) : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    const profileColor = peer && selectPeerProfileColor(global, peer);\n    const theme = selectTheme(global);\n\n    const hasBackground = selectPeerHasProfileBackground(global, peerId);\n    const savedGifts = selectPeerSavedGifts(global, peerId);\n\n    return {\n      user,\n      userFullInfo,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      emojiStatus,\n      profilePhotos,\n      topic,\n      messagesCount: topic ? selectThreadMessagesCount(global, peerId, currentTopicId!) : undefined,\n      profileColorOption: profileColor,\n      theme,\n      isPlain: !hasBackground,\n      savedGifts,\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): Complete<StateProps> => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n    updateTopicMutedState,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    updateTopicMutedState({ chatId, topicId: topic.id, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n    handleUnmute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute, handleUnmute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    let removeTauriListener: VoidFunction | undefined;\n    const setupTauriListener = async () => {\n      const tauriWindow = await window.tauri?.getCurrentWindow();\n      removeTauriListener = await tauriWindow.onResized(() => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n    };\n\n    if (IS_TAURI) {\n      window.tauri?.getCurrentWindow().then((tauriWindow) => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n      setupTauriListener();\n    }\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeTauriListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage: boolean, isMobile: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, Boolean(album.isPaidMedia), isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_TAURI && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n  selectCustomEmoji,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = selectCustomEmoji(global, customEmojiId);\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): Complete<StateProps> => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  threadId,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): Complete<StateProps> => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport { IS_ANDROID, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, getMinMediaWidthWithText } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    noReactions?: boolean;\n    appearAsNotOwn?: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n    isInFocusList?: boolean;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  noReactions,\n  appearAsNotOwn,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  isInFocusList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen || isInFocusList,\n    !IS_TAURI,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = appearAsNotOwn ? false : isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = noReactions ? false : reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  ) || isInFocusList;\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canMarkAsRead = isChatWithSelf || isInFocusList;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleMarkAsRead,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n    isInFocusList,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen && !isInFocusList;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || (\n      (photo || video || storyData || (location?.mediaType === 'geo')) && (!hasText || isInvertedMedia))\n    );\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n    isInFocusList,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < getMinMediaWidthWithText(isMobile)) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton), width);\n      }\n    } else if (albumLayout) {\n      const minWidth = getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton);\n      calculatedWidth = Math.max(minWidth, albumLayout.containerStyle.width);\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && reactionsPosition !== 'inside')) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            threadId={threadId}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {canMarkAsRead && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Done\"\n                  onClick={handleMarkAsRead}\n                >\n                  <Icon name=\"check\" />\n                </Button>\n              )}\n              {!isInFocusList && (\n                <>\n                  {withCommentButton && isCustomShape && (\n                    <CommentButton\n                      threadInfo={repliesThreadInfo}\n                      disabled={noComments}\n                      isLoading={isLoadingComments}\n                      isCustomShape\n                      asActionButton\n                    />\n                  )}\n                  {canForward && (\n                    <Button\n                      className=\"message-action-button\"\n                      color=\"translucent-white\"\n                      round\n                      size=\"tiny\"\n                      ariaLabel={oldLang('lng_context_forward_msg')}\n                      onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                    >\n                      <Icon name=\"share-filled\" />\n                    </Button>\n                  )}\n                  {canFocus && (\n                    <Button\n                      className=\"message-action-button\"\n                      color=\"translucent-white\"\n                      round\n                      size=\"tiny\"\n                      ariaLabel={lang('FocusMessage')}\n                      onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                    >\n                      <Icon name=\"arrow-right\" />\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      outgoingStatus: isOutgoing ? selectOutgoingStatus(global, message, messageListType === 'scheduled') : undefined,\n      uploadProgress: typeof uploadProgress === 'number' ? uploadProgress : undefined,\n      focusDirection: isFocused ? focusDirection : undefined,\n      noFocusHighlight: isFocused ? noFocusHighlight : undefined,\n      isResizingContainer: isFocused ? isResizingContainer : undefined,\n      focusedQuote: isFocused ? focusedQuote : undefined,\n      focusedQuoteOffset: isFocused ? focusedQuoteOffset : undefined,\n      scrollTargetPosition: isFocused ? scrollTargetPosition : undefined,\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser, ApiWebPage } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMainUsername, getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n  isInFocusList,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n  isInFocusList?: boolean;\n}) {\n  const {\n    openChat, openChatWithDraft, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages, deleteMessages, removeFromFocusList\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChatWithDraft({\n      chatId,\n      threadId,\n      text: {\n        text: `@${getMainUsername(botSender)} `,\n      },\n    });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleMarkAsRead = useLastCallback(() => {\n    if (isInFocusList) {\n      removeFromFocusList({ chatId, messageId });\n    } else {\n      deleteMessages({ messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleMarkAsRead,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  noCaptions?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  noCaptions,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (noCaptions) {\n      return lang('EmbeddedMessageNoCaption');\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useMemo } from '../lib/teact/teact';\r\n\r\nimport type { GlobalState } from '../global/types';\r\nimport type { Workspace } from '../types';\r\nimport useSelector from './data/useSelector';\r\nimport { useLocalStorage } from './useStorage';\r\n\r\nfunction selectCurrentUserId(global: GlobalState) {\r\n  return global.currentUserId;\r\n}\r\n\r\nexport function useWorkspaceStorage() {\r\n  const currentUserId = useSelector(selectCurrentUserId);\r\n\r\n  const workspacesKey = useMemo(() => {\r\n    return currentUserId ? `workspaces_${currentUserId}` : 'workspaces';\r\n  }, [currentUserId]);\r\n\r\n  const workspaceIdKey = useMemo(() => {\r\n    return currentUserId ? `currentWorkspaceId_${currentUserId}` : 'currentWorkspaceId';\r\n  }, [currentUserId]);\r\n\r\n  const excludeOtherWorkspacesKey = useMemo(() => {\r\n    return currentUserId ? `excludeOtherWorkspaces_${currentUserId}` : 'excludeOtherWorkspaces';\r\n  }, [currentUserId]);\r\n\r\n  const [savedWorkspaces, setSavedWorkspaces] = useLocalStorage<Workspace[]>({\r\n    key: workspacesKey,\r\n    initValue: [],\r\n  });\r\n  const [\r\n    currentWorkspaceId,\r\n    setCurrentWorkspaceId,\r\n  ] = useLocalStorage<string>({\r\n    key: workspaceIdKey,\r\n    initValue: \"0\",\r\n  });\r\n\r\n  const [excludeOtherWorkspaces, setExcludeOtherWorkspaces] = useLocalStorage<boolean>({\r\n    key: excludeOtherWorkspacesKey,\r\n    initValue: false,\r\n  });\r\n\r\n  return {\r\n    savedWorkspaces,\r\n    setSavedWorkspaces,\r\n    currentWorkspaceId,\r\n    setCurrentWorkspaceId,\r\n    excludeOtherWorkspaces,\r\n    setExcludeOtherWorkspaces,\r\n  };\r\n}\r\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","reduce","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","isDisabled","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","window","innerWidth","requestMutation","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","passive","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","useRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","Math","floor","Date","now","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","Array","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","fill","in2","operator","scale","xChannelSelector","yChannelSelector","forceShowSelf","isSynced","userStatus","selectUserStatus","isSavedMessages","isSelf","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","ripple","onEmojiStatusClick","iconElement","rightElement","loadFullUser","openMediaViewer","loadMoreProfilePhotos","hasAvatarMediaViewer","peerId","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","stopPropagation","isAvatarView","mediaIndex","origin","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","buildClassName","dir","isRtl","Avatar","size","onClick","FullNameTitle","withEmojiStatus","DotAnimation","content","subtitleKey","TypingStatus","isSystemBot","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","ChatCallStatus","isSelected","isMobile","ChatTags","orderedFolderIds","chatFoldersById","visibleFolderIds","slice","remainingCount","folderId","folder","getApiPeerColorClass","color","renderTextWithEntities","text","entities","noCustomEmojiPlayback","noTitleAnimations","emojiSize","isPreview","previewMessageId","selectChat","chatFolderIds","getChatFolderIds","areTagsEnabled","chatFolders","isPremium","selectIsCurrentUserPremium","lastMessageId","selectChatLastMessageId","lastMessage","selectChatMessage","selectChatLastMessage","isOutgoing","forwardInfo","savedDialogSender","fromId","selectPeer","messageSender","selectSender","lastMessageSender","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","isSelectedForum","isForum","selectTabState","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","isAccountFrozen","selectIsCurrentUserFrozen","monoforumChannel","selectMonoforumChannel","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topics","topicsById","Chat","orderDiff","animationType","isPinned","observeIntersection","offsetTop","onDragEnter","withTags","openChat","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","updateChatMutedState","useAppLayout","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","tagFolderIds","chatFolderIdsSet","isAll","ALL_FOLDER_ID","hasColor","shouldRenderTags","renderSubtitle","ref","useChatListEntry","statefulMediaContent","groupStatefulContent","noForumTitle","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","handleClick","noForumTopicPanel","value","forceOnHeavyAnimation","force","shouldReplaceHistory","handleDragEnter","preventDefault","handleDelete","handleMute","handleUnmute","mutedUntil","UNMUTE_TIMESTAMP","handleChatFolderChange","handleReport","messageIds","contextActions","useChatContextActions","isIntersecting","useIsIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","isUserId","ListItem","withPortalForMenu","asMessageBubble","subscriptionUntil","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","monoforumBadgeClassName","withStatusTextColor","LastMessageMeta","outgoingStatus","draftDate","date","hasMiniApp","hasMainMiniApp","DeleteChatModal","onCloseAnimationEnd","MuteChatModal","ChatFolderModal","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","settings","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","story","loadPeerStoriesByIds","loadStoryThrottled","throttled","throttle","storyIds","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","classList","add","body","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","handlePaste","async","clipboardData","input","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","querySelectorAll","getElementsByTagName","removeAttribute","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","pluralValue","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","cb","requestMeasure","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","round","onerror","delayStop","max","setTimeout","pause","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","theme","shouldCollectDebugLogs","canEditMedia","editingMessage","paidMessagesStars","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","oldLang","ResponsiveHoverButton","onActivate","ariaLabel","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","_Fragment","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","Button","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","isForwarding","forwardedMessages","replyInfo","suggestedPostInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","selectForwardedSender","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","isContextMenuDisabled","storyData","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","isShown","shouldRender","transitionClassNames","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","WebPagePreview","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","useShowTransition","withShouldRender","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","useMedia","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handleBeforeContextMenu","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","PeerColorWrapper","noUserColors","onMouseDown","src","siteName","url","description","webPage","photo","video","audio","MainButtonState","chatBot","selectBot","isChatWithBot","isChatWithUser","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","selectTheme","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","useSignal","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","shouldPrepend","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","newFirstWord","shouldReplace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","EDITABLE_INPUT_CSS_SELECTOR","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","price","currency","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","adminRights","anonymous","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","selectCustomEmoji","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","direction","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","peers","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","isRestricted","selectIsChatRestricted","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","clearTimeout","wasTopicOpened","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","Video","isOwn","isInWebPage","noAvatars","canAutoLoad","canAutoPlay","uploadProgress","forcedWidth","dimensions","asForwarded","isDownloading","isProtected","lastPlaybackTimestamp","clickArg","observeIntersectionForLoading","observeIntersectionForPlaying","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","mediaType","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","noMountTransition","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","media","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","canPlay","defaultMuted","muted","loop","playsInline","disablePictureInPicture","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","isGif","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","withPortal","onLoad","onSearchOpen","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","getMinMediaWidthWithText","getMinMediaWidth","hasCommentButton","calculateMediaDimensions","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","messages","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","useLocalStorage","initValue","eventName","getStoredValue","localStorage","getItem","JSON","parse","writeValue","stringifiedValue","stringify","setItem","restoreValue","storedValue","setState","listenStorageChange","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageTextWithFallback","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","Link","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","TopicIcon","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","onStart","onEnd","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","end","cancel","useUnmountCleanup","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","container","useCommonAncestor","sel","cloneRange","intersectsNode","contains","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","index","inputSelector","getRange","setRange","onSelectionChange","Element","VTN_PROPERTY_NAME","useVtn","uniqueId","fallbackId","useUniqueId","createVtnStyle","vtClass","vtClassString","buildStyle","CSS","registerProperty","syntax","inherits","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","handleDragLeave","relatedTarget","toTarget","onDrop","onDragLeave","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","a","b","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","canGiftPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","containerRef","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","chats","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleToggleNotifications","MUTE_INDEFINITE_TIMESTAMP","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","idx","stopEvent","dataTransferItems","traverseFileTreePromise","entry","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","IS_TAURI","togglePinned","actionPin","actionDelete","compact","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isAnonymousForwardsChat","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","IS_APP","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","handleResize","useThrottledCallback","useResizeObserver","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transform","zIndex","String","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","chatsById","arr","isLast","getChatTitle","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","ChatList","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","toggleFocusList","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","currentWorkspaceId","excludeOtherWorkspaces","savedWorkspaces","useWorkspaceStorage","isArchived","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","foldersFromWorkspaces","flatMap","w","foldersIds","shouldFilterByWorkspace","filteredOrderedIds","orderedIdsWithoutSelf","folderChatIds","getOrderedIds","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","handleKeyDown","IS_MAC_OS","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","clientX","clientY","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onLoadMore","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","Photo","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","extension","timestamp","thumbnailDataUri","previewData","smaller","isSelectable","actionIcon","onDateClick","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaHash","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","renderSummary","Opacity","opacity","Move","ANIMATION_END_DELAY","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","time","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","senderId","preloadedHashes","LimitedMap","Document","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutFiles","onMediaClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","fromPreload","fileEl","onHover","mediaContainer","getMessageDocumentVideo","getMessageDocumentPhoto","shouldSkipPhoto","fetch","IS_PROGRESSIVE_SUPPORTED","videoEl","naturalWidth","naturalHeight","updateChatMessage","setGlobal","preloadDocumentMedia","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","isDocumentVideo","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","formatTemperature","temperatureC","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","handleScroll","isScrolled","scrollTop","toggleExtraClass","addExtraClass","removeExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","canvas","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","AvatarList","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isOwnMessage","isReverse","withAvatar","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","getContext","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","Progressive","selectIsSynced","setLoadProgress","startedAtRef","handleProgress","spentTime","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","isGraph","obj","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","openPremiumModal","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","scrollHeight","newHeight","isOverflown","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","spellCheck","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","getMessageHtmlId","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","RoundVideo","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","ProfilePhoto","canPlayVideo","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getUserFullName","getFirstLetters","GIFT_STICKER_SIZE","POSITIONS","PinnedGift","gift","withGlow","openGiftInfoModal","stickerRef","giftAttributes","getGiftAttributes","model","backdrop","GiftEffectWrapper","withSparkles","sparklesColor","glowColor","edgeColor","ProfilePinnedGifts","gifts","clamp","getExpandedPosition","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","profileColor","selectPeerProfileColor","hasBackground","selectPeerHasProfileBackground","savedGifts","selectPeerSavedGifts","profileColorOption","ProfileInfo","isForSettings","isForMonoforum","openStickerSet","openPrivacySettingsNoticeModal","openProfileRatingModal","loadPeerSavedGifts","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","collectibleEmojiStatus","backgroundEmoji","useCustomEmoji","patternDocumentId","backgroundEmojiId","profileColorSet","bgColors","centerColor","storyColors","colors","darkColors","reverse","pinnedGifts","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","handleRatingClick","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","RadialPatternBackground","backgroundColors","patternIcon","patternColor","patternSize","patternOpacity","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","canCopyTitle","isSystemBotChat","renderUserRating","isReadDateRestrictedByMe","renderStatus","starsRating","onRatingClick","safeLevel","iconLevel","iconName","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","lastReadInboxMessageId","selectTopics","lastMessageStory","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeTauriListener","tauri","getCurrentWindow","tauriWindow","onResized","setupTauriListener","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","extendedMedia","singularMedia","accumulate","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","paidMedia","getMessageContent","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","peerColor","shouldReset","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","selectCanAutoPlayMedia","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","getMessageText","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","buttonType","Invoice","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","starsAmount","getPercentage","total","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","Poll","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","openStoryViewer","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","TodoList","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","pattern","isHover","markHover","unmarkHover","WebPage","messageWebPage","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getPhotoFullDimensions","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isSafe","caption","isRectangular","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","selectMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","noReactions","appearAsNotOwn","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","isInFocusList","memoFirstUnreadIdRef","onIntersectPinnedMessage","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canMarkAsRead","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleMarkAsRead","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","deleteMessages","removeFromFocusList","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","detectLanguage","useTextLanguage","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","getMessageWebPage","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","scheduleDate","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","EmbeddedMessage","forwardSender","Story","StoryMention","MessageAppendix","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","formatScheduledDateTime","getMediaContentTypeDescription","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","selectCurrentUserId","workspacesKey","workspaceIdKey","excludeOtherWorkspacesKey","setSavedWorkspaces","setCurrentWorkspaceId","setExcludeOtherWorkspaces","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}