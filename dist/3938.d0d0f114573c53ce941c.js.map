{"version":3,"file":"3938.d0d0f114573c53ce941c.js","mappings":"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jX,wBACAg5B,YAAav1C,QAAQ+wC,GACrB1I,yBACAC,sBAAsB2K,IAAYO,IAC5BrB,GAAep3C,GAAMsD,KAAOm3C,EAAAA,KAAkCrC,IACpExM,eAAgBpqB,MAAyBk5B,EAAAA,EAAAA,KAA+Br8C,GACxE26C,uBACAvL,mBACAn6B,wBAAwBqnC,EAAAA,EAAAA,KAA6Bt8C,EAAQ8iB,EAAQzD,QACrEsvB,gBACAC,gBAAiBsM,KAAmBG,GACpCxM,kBAAmBqM,KAAmBG,GACtCkB,oBAAqBrB,GACrB7gB,uBAAuBmiB,EAAAA,EAAAA,KAA4Bx8C,GACnDgtC,sBAAsByP,EAAAA,EAAAA,KAA2Bz8C,GACjDs6B,qBACA0e,YACAW,kBACAjf,mBAAoBid,GAAc+E,wBAClCzP,QACAE,SACAiE,eACAC,WACAwK,iBACA3O,WACA5P,eAAeqf,EAAAA,EAAAA,KAA2B38C,EAAQ8iB,EAAQzD,OAAQyD,EAAQ7d,MA/K5DlF,CAnqBoC68C,EACtD75B,WACAnf,qBACAm2B,eACAC,sBACArlB,SACA0iC,kBACAv0B,UACA63B,sBACAvL,kBACAyN,QACA5P,OACAC,UACAC,QACAhK,SACAiK,aACA8K,YACA7K,aACA8O,cACA7O,gBACAE,WACAK,SACAkB,oBACAjB,WACAC,YACAkB,wBACAttC,OACAssC,YACAiB,sBACAxB,UACAC,oBACA1T,mBACAE,iBACAC,YACAjX,uBACA6qB,cACAT,iBACAW,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACArU,yBACAoS,mBACAD,wBACAiL,mBACA7J,aACAoB,iBACA/5B,0BACA05B,gBACA4N,uBACA3N,mBACAC,qBACA7B,wBACA1S,qBACAqf,kBACAjf,sBACA0W,gBACAC,WACAnwC,aACA26C,iBACAve,iBACAtmB,WACAwzB,2BAEA,MAAM,WACJsS,GAAU,qBACVC,GAAoB,aACpBC,GAAY,WACZC,GAAU,gBACVC,GAAe,cACfC,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjBC,GAA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","sources":["webpack://telegram-t/./src/hooks/useImageLoader.ts","webpack://telegram-t/./src/hooks/animations/useTransitionActiveKey.ts","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/events/getPointerPosition.ts","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/util/resolveTransitionName.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/left/main/FocusListButton.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","import { useMemo, useRef } from '../../lib/teact/teact';\n\n/**\n * Use this hook to bind `<Transition />` animation to changes in the dependency array.\n * Use optional parameter `noAnimation` if you want to prevent the animation even if the dependency array changes.\n*/\nexport function useTransitionActiveKey(deps: unknown[], noAnimation?: boolean): number {\n  const activeKey = useRef(0);\n\n  useMemo(() => {\n    if (!noAnimation) activeKey.current += 1;\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...deps]);\n\n  return activeKey.current;\n}\n","import type { TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n\n  peerId?: string;\n\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): Complete<StateProps> => {\n    if (!peerId) {\n      return {\n        peer: undefined,\n        isSavedMessages: undefined,\n      };\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { ElementRef } from '../lib/teact/teact';\nimport { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: ElementRef<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  noRipple?: boolean;\n  onClearError: NoneToVoidFunction;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder,\n  submitLabel,\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  onClearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      onClearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          spellCheck={IS_TAURI ? false : undefined}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder || lang('PasswordFormPlaceholder')}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title={lang('AriaPasswordToggle')}\n          aria-label={lang('AriaPasswordToggle')}\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel || lang('PasswordFormSubmit')}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"noTransition\":\"HS9PzRKt\",\"floatingBadgeContent\":\"W4rqGyJl\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progressWrapper\":\"_B4r3D5W\",\"positiveLayer\":\"VmyTBAzN\",\"positiveProgress\":\"MzFvyMb5\",\"negativeLayer\":\"QZwWHVdB\",\"negativeProgress\":\"S6H6hBpP\",\"primary\":\"Zi0w7QJ3\",\"negative\":\"dXs41qvC\",\"transitioning\":\"I7toQztx\",\"hidden\":\"xdKGgbKQ\",\"cycling\":\"SxTCkiyg\",\"show\":\"tkyw4hXo\"};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { REM } from './helpers/mediaDimensions';\n\nimport { useTransitionActiveKey } from '../../hooks/animations/useTransitionActiveKey';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useSyncEffect from '../../hooks/useSyncEffect';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\nexport type AnimationDirection = 'forward' | 'backward' | 'none';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  isNegative?: boolean;\n  animationDirection?: AnimationDirection;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress = 0,\n  isPrimary,\n  isNegative,\n  animationDirection = 'none',\n  className,\n}) => {\n  const lang = useOldLang();\n  const floatingBadgeContentRef = useRef<HTMLDivElement>();\n  const parentContainerRef = useRef<HTMLDivElement>();\n\n  const [shiftX, setShiftX] = useState(0);\n  const [beakPosition, setBeakPosition] = useState(0);\n  const [badgeWidth, setBadgeWidth] = useState(0);\n  const prevBadgeWidth = usePrevious(badgeWidth);\n  const [positiveProgress, setPositiveProgress] = useState(isNegative ? 0 : progress);\n  const [negativeProgress, setNegativeProgress] = useState(isNegative ? progress : 0);\n  const [badgeProgress, setBadgeProgress] = useState(progress);\n\n  const [layerProgress, setLayerProgress] = useState(0);\n  const [showLayer, setShowLayer] = useState(false);\n  const [disableMainProgressTransition, setDisableMainProgressTransition] = useState(false);\n  const [disableLayerProgressTransition, setDisableLayerProgressTransition] = useState(false);\n  const [hideMainLayer, setHideMainLayer] = useState(false);\n  const [isCycling, setIsCycling] = useState(false);\n\n  const badgeActiveKey = useTransitionActiveKey([floatingBadgeText, floatingBadgeIcon]);\n\n  const shouldAnimateCaptionsRef = useRef(false);\n  const prevLeftText = usePrevious(leftText);\n  const prevRightText = usePrevious(rightText);\n  const prevIsNegative = usePrevious(isNegative);\n\n  const BEAK_WIDTH_PX = 28;\n  const PROGRESS_BORDER_RADIUS_PX = REM;\n  const CORNER_BEAK_THRESHOLD = BEAK_WIDTH_PX / 2 + PROGRESS_BORDER_RADIUS_PX;\n  const BADGE_HORIZONTAL_PADDING_PX = 0.75 * 2 * REM;\n\n  const LAYER_PROGRESS_TRANSITION_MS = 400;\n  const FULL_CYCLE_TRANSITION_MS = LAYER_PROGRESS_TRANSITION_MS * 2;\n  const APPLY_TRANSITION_DELAY_MS = 50;\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeContentRef.current && parentContainerRef.current) {\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const halfBadgeWidth = badgeWidth / 2;\n      const minBadgeShift = halfBadgeWidth;\n      const maxBadgeShift = parentWidth - halfBadgeWidth;\n      const halfBeakWidth = BEAK_WIDTH_PX / 2;\n      const currentShift = isNegative ? (1 - badgeProgress) * parentWidth : badgeProgress * parentWidth;\n\n      let safeShift = Math.max(minBadgeShift, Math.min(currentShift, maxBadgeShift));\n      if (currentShift < CORNER_BEAK_THRESHOLD) {\n        safeShift = currentShift + halfBadgeWidth;\n      }\n      if (currentShift > parentWidth - CORNER_BEAK_THRESHOLD) {\n        safeShift = currentShift - halfBadgeWidth;\n      }\n\n      const beakOffsetFromCenter = currentShift - safeShift;\n      const newBeakPositionPx = halfBadgeWidth + beakOffsetFromCenter - halfBeakWidth;\n\n      setShiftX(safeShift / parentWidth);\n      setBeakPosition(newBeakPositionPx);\n    }\n  };\n\n  useEffect(updateBadgePosition, [badgeProgress, badgeWidth, isNegative, CORNER_BEAK_THRESHOLD]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  useEffect(() => {\n    const width = floatingBadgeContentRef?.current?.clientWidth || 0;\n    setBadgeWidth(width + BADGE_HORIZONTAL_PADDING_PX);\n  }, [floatingBadgeText, floatingBadgeIcon, BADGE_HORIZONTAL_PADDING_PX]);\n\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    let timeoutId: number | undefined;\n\n    const isNegativeTransition = prevIsNegative !== undefined && prevIsNegative !== isNegative;\n    const shouldAnimateCaptions = (prevLeftText || prevRightText) && (isNegativeTransition || isCycling);\n\n    if (shouldAnimateCaptions && !shouldAnimateCaptionsRef.current) {\n      shouldAnimateCaptionsRef.current = true;\n\n      const timeoutMs = isCycling ? LAYER_PROGRESS_TRANSITION_MS * 2 : LAYER_PROGRESS_TRANSITION_MS;\n      timeoutId = window.setTimeout(() => {\n        shouldAnimateCaptionsRef.current = false;\n        forceUpdate();\n      }, timeoutMs);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        shouldAnimateCaptionsRef.current = false;\n      }\n    };\n  }, [\n    leftText, prevLeftText, rightText, prevRightText,\n    prevIsNegative, isNegative, animationDirection, isCycling,\n  ]);\n\n  const shouldAnimateCaptions = shouldAnimateCaptionsRef.current;\n\n  useEffect(() => {\n    if (isNegative) {\n      setPositiveProgress(0);\n      setNegativeProgress(progress);\n    } else {\n      setNegativeProgress(0);\n      setPositiveProgress(progress);\n    }\n    setBadgeProgress(progress);\n  }, [progress, isNegative]);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n\n  const displayLeftText = shouldAnimateCaptions ? prevLeftText : leftText;\n  const displayRightText = shouldAnimateCaptions ? prevRightText : rightText;\n\n  const prevProgress = usePrevious(progress);\n\n  useEffect(() => {\n    const timers: number[] = [];\n\n    if (animationDirection === 'none' || prevProgress === undefined) {\n      return;\n    }\n\n    const targetProgress = progress;\n\n    const setMainProgress = (value: number) => {\n      if (isNegative) {\n        setNegativeProgress(value);\n      } else {\n        setPositiveProgress(value);\n      }\n    };\n\n    if (animationDirection === 'forward' || animationDirection === 'backward') {\n      const isForward = animationDirection === 'forward';\n\n      setIsCycling(true);\n      setMainProgress(isForward ? 1 : 0);\n\n      setDisableLayerProgressTransition(true);\n      setLayerProgress(isForward ? 0 : 1);\n\n      timers.push(window.setTimeout(() => {\n        setDisableLayerProgressTransition(false);\n        setShowLayer(true);\n        setLayerProgress(targetProgress);\n        if (isForward) {\n          setDisableMainProgressTransition(true);\n          setMainProgress(0);\n        }\n      }, LAYER_PROGRESS_TRANSITION_MS));\n\n      timers.push(window.setTimeout(() => {\n        setDisableMainProgressTransition(true);\n        setDisableLayerProgressTransition(true);\n        setHideMainLayer(false);\n        setMainProgress(targetProgress);\n        setShowLayer(false);\n\n        timers.push(window.setTimeout(() => {\n          setDisableMainProgressTransition(false);\n          setDisableLayerProgressTransition(false);\n          setIsCycling(false);\n        }, APPLY_TRANSITION_DELAY_MS));\n      }, FULL_CYCLE_TRANSITION_MS));\n    }\n\n    return () => {\n      timers.forEach(clearTimeout);\n    };\n  }, [\n    progress, animationDirection, isNegative,\n    prevProgress, FULL_CYCLE_TRANSITION_MS,\n  ]);\n\n  const renderProgressLayer = (\n    isPositive: boolean,\n    currentProgress: number,\n    layerClassName?: string,\n    disableTransition?: boolean,\n  ) => {\n    const typeClass = isPositive ? styles.positiveProgress : styles.negativeProgress;\n    const progressVar = '--layer-progress';\n\n    return (\n      <div\n        className={buildClassName(\n          typeClass,\n          layerClassName,\n          disableTransition && styles.noTransition,\n        )}\n        style={`${progressVar}: ${currentProgress}`}\n      >\n        <div className={styles.left}>\n          <span>{displayLeftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{displayRightText}</span>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        isNegative && styles.negative,\n        shouldAnimateCaptions && styles.transitioning,\n        isCycling && styles.cycling,\n        className,\n      )}\n      style={buildStyle(\n        `--positive-progress: ${positiveProgress}`,\n        `--negative-progress: ${negativeProgress}`,\n        `--layer-progress: ${layerProgress}`,\n        `--shift-x: ${shiftX}`,\n        `--cycling-animation-badge-position: ${FULL_CYCLE_TRANSITION_MS}ms`,\n        `--cycling-animation-progress: ${LAYER_PROGRESS_TRANSITION_MS}ms`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div\n              className={\n                buildClassName(styles.floatingBadge,\n                  (!prevBadgeWidth || prevBadgeWidth === 0)\n                  && styles.noTransition)\n              }\n              style={`width: ${badgeWidth}px;`}\n            >\n              <Transition\n                activeKey={badgeActiveKey}\n                name=\"fade\"\n                shouldCleanup\n              >\n                <div\n                  ref={floatingBadgeContentRef}\n                  className={styles.floatingBadgeContent}\n                >\n                  {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n                  {floatingBadgeText && (\n                    <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                      {floatingBadgeText}\n                    </div>\n                  )}\n                </div>\n              </Transition>\n            </div>\n            <div className={styles.floatingBadgeTriangle} style={`left: ${beakPosition}px`}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"currentColor\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{displayLeftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{displayRightText}</span>\n      </div>\n\n      <div className={styles.progressWrapper}>\n        {renderProgressLayer(\n          true,\n          positiveProgress,\n          buildClassName(hideMainLayer && styles.hidden),\n          disableMainProgressTransition,\n        )}\n\n        {renderProgressLayer(\n          false,\n          negativeProgress,\n          buildClassName(hideMainLayer && styles.hidden),\n          disableMainProgressTransition,\n        )}\n\n        {renderProgressLayer(\n          !isNegative,\n          layerProgress,\n          buildClassName(\n            isNegative ? styles.negativeLayer : styles.positiveLayer,\n            showLayer && styles.show,\n          ),\n          disableLayerProgressTransition,\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n  isRemindMe?: boolean,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n      isRemindMe={isRemindMe}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Icon from './icons/Icon';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  isNsfw?: boolean;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  isNsfw,\n  className,\n  width,\n  height,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n      {isNsfw && (\n        <span className={styles.nsfw}>\n          <Icon name=\"eye-crossed-outline\" className={styles.nsfwIcon} />\n          {lang('MediaSpoilerSensitive')}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"nsfw\":\"FJGQoa6s\",\"nsfwIcon\":\"Y7JVRkxJ\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import type { AnimationLevel } from '../types';\n\nimport { ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN } from '../config.ts';\nimport { IS_ANDROID, IS_IOS } from './browser/windowEnvironment.ts';\n\nexport function resolveTransitionName(\n  name: 'slideOptimized' | 'slide' | 'layers',\n  animationLevel: AnimationLevel,\n  isDisabled = false,\n  isRtl = false,\n) {\n  if (isDisabled || animationLevel === ANIMATION_LEVEL_MIN) return 'none';\n\n  if (animationLevel === ANIMATION_LEVEL_MED) return 'slideFade';\n\n  return name === 'slideOptimized' ? (\n    isRtl ? 'slideOptimizedRtl' : 'slideOptimized'\n  ) : name === 'slide' ? (\n    isRtl ? 'slideRtl' : 'slide'\n  ) : (\n    IS_ANDROID ? 'slideFade' : IS_IOS ? 'slideLayers' : 'pushSlide'\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: ElementRef<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\nimport { clamp } from '../../../util/math';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n  patternSize?: number;\n  patternOpacity?: number;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  patternOpacity,\n  clearBottomSector,\n  className,\n  patternSize = 1,\n}: OwnProps) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x: xOffset,\n          y: yOffset,\n          sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const renderX = x * patternSize * Math.max(width, MIN_SIZE * dpr) + width / 2;\n      const renderY = y * patternSize * Math.max(height, MIN_SIZE * dpr) + height / 2;\n\n      const size = BASE_ICON_SIZE * dpr * patternSize * sizeFactor;\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n\n    const alpha = clamp(0.6 * (patternOpacity ?? 1), 0, 1);\n\n    radialGradient.addColorStop(0, `rgb(255 255 255 / ${1 - alpha})`);\n    radialGradient.addColorStop(1, `rgb(255 255 255 / 1)`);\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage, patternOpacity, patternSize, patternColor, patternPositions]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current;\n    if (!width || !height || !canvas) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, emojiImage && styles.showing)}\n        aria-hidden=\"true\"\n      />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\",\"showing\":\"Y5FyX1oo\"};","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const effectRef = useRef<HTMLDivElement>();\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {Boolean(inputElement) && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {Boolean(avatarElement) && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {Boolean(subtitle) && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageTextWithFallback,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getTranslationFn, type LangFn } from '../../../util/localization';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n}: {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageTextWithFallback(getTranslationFn(), message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getMainUsername, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  const inputRef = useRef<HTMLInputElement>();\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) {\n        return (\n          <div key={id}>\n            No peer or category with ID\n            {id}\n          </div>\n        );\n      }\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = getMainUsername(peer);\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n\n        onClick={() => handleItemClick(id)}\n\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById = new Map<string, VoidFunction>();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: ElementRef<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n        && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n  isInFocusList,\n}: {\n  elementRef: ElementRef<HTMLDivElement>;\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isInFocusList?: boolean;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current && !isInFocusList) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n    isInFocusList,\n  ]);\n}\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, clientHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import { getActions, withGlobal } from '../../../global';\r\nimport { selectFocusListCount, selectTabState } from '../../../global/selectors';\r\nimport type { FC } from '../../../lib/teact/teact';\r\nimport React, { memo } from '../../../lib/teact/teact';\r\nimport buildClassName from '../../../util/buildClassName';\r\n\r\nexport const TargetIcon: FC = () => (\r\n  <span className=\"icon\">\r\n    <svg\r\n      width=\"20\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"2.3\"/>\r\n      <circle cx=\"12\" cy=\"12\" r=\"5\" stroke=\"currentColor\" stroke-width=\"2.3\"/>\r\n      <circle cx=\"12\" cy=\"12\" r=\"1.5\" fill=\"currentColor\"/>\r\n    </svg>\r\n  </span>\r\n);\r\n\r\nimport './FocusListButton.scss';\r\n\r\ntype StateProps = {\r\n  isActive?: boolean;\r\n  count?: number;\r\n}\r\n\r\nconst FocusListButton: FC<StateProps> = ({ isActive, count }) => {\r\n  const { toggleFocusList } = getActions();\r\n\r\n  return (\r\n    <div\r\n      onClick={() => toggleFocusList()}\r\n      className={buildClassName('FocusListButton-trigger', isActive && 'active')}\r\n    >\r\n      <TargetIcon />  \r\n      Priority\r\n      <span className=\"count\">{count}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(withGlobal<StateProps>(\r\n  (global): StateProps => {\r\n    const { isFocusListShown } = selectTabState(global);\r\n\r\n    return {\r\n      isActive: isFocusListShown,\r\n      count: selectFocusListCount(global),\r\n    }\r\n  }\r\n)(FocusListButton));\r\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getPhotoMediaHash,\n  getWebPagePhoto,\n  getWebPageVideo,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport { getTranslationFn } from '../../../../util/localization';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const { webPage } = statefulContent || {};\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getWebPageVideo(webPage) ? getWebPagePhoto(webPage) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          ) as string[];\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(getTranslationFn(), message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = selection?.anchorNode?.parentNode as HTMLElement;\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { TargetIcon } from '../../left/main/FocusListButton';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onAppendTodoList?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  onMoveToBottom?: NoneToVoidFunction;\n  onAddToFocus?: NoneToVoidFunction;\n  onRemoveFromFocus?: NoneToVoidFunction;\n  onRemindMe?: NoneToVoidFunction;\n  userFullName?: string;\n  canGift?: boolean;\n  isInFocusList?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  webPage,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  canAppendTodoList,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onAppendTodoList,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  onMoveToBottom,\n  onAddToFocus,\n  onRemoveFromFocus,\n  onRemindMe,\n  userFullName,\n  canGift,\n  isInFocusList,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  const menuRef = useRef<HTMLDivElement>();\n  const scrollableRef = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const canAddOrRemoveFromFocus = !canSendNow;\n  const canRemindMe = canForward;\n  const canMoveToBottom = isInSavedMessages && canForward;\n\n  const showEnsoActions = canAddOrRemoveFromFocus || canRemindMe || canMoveToBottom;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: oldLang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, webPage, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {showEnsoActions && (\n          <>\n            {canAddOrRemoveFromFocus && (\n              <MenuItem \n                icon={isInFocusList ? \"check\" : undefined}\n                customIcon={!isInFocusList ? <TargetIcon /> : undefined}\n                onClick={isInFocusList ? onRemoveFromFocus : onAddToFocus}\n              >\n                {isInFocusList ? 'Remove from Priority' : 'Add to Priority'}\n              </MenuItem>\n            )}\n            {canRemindMe && (\n              <MenuItem icon='schedule' onClick={onRemindMe}>\n                Remind me\n              </MenuItem>\n            )}\n            {canMoveToBottom && (\n              <>\n                <MenuItem icon=\"arrow-down\" onClick={onMoveToBottom}>\n                  Move to bottom\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n          </>\n        )}\n\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? oldLang('SendAnotherGift')\n                : oldLang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{oldLang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{oldLang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {oldLang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {oldLang('Conversation.ContextViewReplies', repliesThreadInfo.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{oldLang('Edit')}</MenuItem>}\n        {canAppendTodoList && (\n          <MenuItem icon=\"add\" onClick={onAppendTodoList}>\n            {lang('MenuButtonAppendTodoList')}\n          </MenuItem>\n        )}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{oldLang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{oldLang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{oldLang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && (\n          <MenuItem icon=\"language\" onClick={onShowOriginal}>\n            {oldLang('ShowOriginalButton')}\n          </MenuItem>\n        )}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{oldLang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >\n            {oldLang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{oldLang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{oldLang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{oldLang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{oldLang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{oldLang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? oldLang('lng_context_cancel_download') : oldLang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{oldLang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{oldLang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{oldLang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{oldLang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(\n                  oldLang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'],\n                )}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(oldLang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? oldLang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : oldLang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? oldLang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : oldLang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiWebPage,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectIsMessageInFocusList,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSavedDialogIdFromMessage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n  selectWebPageFromMessage,\n} from '../../../global/selectors';\nimport { selectMessageDownloadableMedia } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n  savedDialogId?: string;\n  isInFocusList?: boolean;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  webPage,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  canAppendTodoList,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  savedDialogId,\n  isInFocusList,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openTodoListModal,\n    showNotification,\n    forwardToSavedMessages,\n    deleteMessages,\n    addToFocusList,\n    removeFromFocusList,\n    toggleFocusList,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n  const [requestRemindMeCalendar, remindMeCalendar] = useSchedule(false, onClose, message.date, true);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    const global = getGlobal();\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const handleAddToFocus = useLastCallback(() => {\n    closeMenu();\n    addToFocusList({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    toggleFocusList({ force: true });\n  });\n\n  const handleRemoveFromFocus = useLastCallback(() => {\n    closeMenu();\n    removeFromFocusList({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        monoforumPeerId: savedDialogId,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    if (message.content.todo) {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    } else {\n      setEditingId({ messageId: message.id });\n    }\n    closeMenu();\n  });\n\n  const handleAppendTodoList = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForAppendToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n        forNewTask: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleMoveToBottom = useLastCallback(() => {\n    closeMenu();\n    const messageIds = album?.messages ? album.messages.map(({ id }) => id) : [message.id];\n    \n    openForwardMenu({ fromChatId: message.chatId, messageIds });\n    forwardToSavedMessages();\n    \n    setTimeout(() => {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }, 100);\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleRemindScheduleMessage = useLastCallback((scheduledAt: number) => {\n    forwardToSavedMessages({ scheduledAt });\n    onClose();\n  });\n\n  const handleRemindMe = useLastCallback(() => {\n    const messageIds = album?.messages ? album.messages.map(({ id }) => id) : [message.id];\n    openForwardMenu({ fromChatId: message.chatId, messageIds, isRemindMe: true });\n    setIsMenuOpen(false);\n\n    requestRemindMeCalendar(handleRemindScheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    const global = getGlobal();\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canAppendTodoList={canAppendTodoList}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        webPage={webPage}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onAppendTodoList={handleAppendTodoList}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        onMoveToBottom={handleMoveToBottom}\n        onAddToFocus={handleAddToFocus}\n        onRemoveFromFocus={handleRemoveFromFocus}\n        userFullName={userFullName}\n        canGift={canGift}\n        isInFocusList={isInFocusList}\n        onRemindMe={handleRemindMe}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={oldLang('lng_polls_stop_warning')}\n        confirmLabel={oldLang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n      {canForward && remindMeCalendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): Complete<StateProps> => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig;\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n      && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !chat.isMonoforum\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const webPage = selectWebPageFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n    const todoItemsMax = global.appConfig.todoItemsMax;\n    const canAppendTodoList = message.content.todo?.todo.othersCanAppend\n      && message.content.todo?.todo.items?.length < todoItemsMax;\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canAppendTodoList,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n      savedDialogId,\n      webPage,\n      isInFocusList: selectIsMessageInFocusList(global, message.chatId, message.id),\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","useTransitionActiveKey","deps","noAnimation","activeKey","useMemo","memo","withGlobal","global","peerId","forceShowSelf","peer","isSavedMessages","selectPeer","user","selectUser","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","_jsx","children","Icon","name","style","Avatar","size","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","_jsxs","dir","isRtl","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","ref","isCustom","type","availableReaction","find","r","isSameReaction","centerIconId","centerIcon","id","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","Math","floor","random","length","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","_Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","setTimeout","clearTimeout","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","onClearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","useLang","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","spellCheck","IS_TAURI","onChange","e","MIN_PASSWORD_LENGTH","maxLength","role","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","isNegative","animationDirection","floatingBadgeContentRef","parentContainerRef","shiftX","setShiftX","beakPosition","setBeakPosition","badgeWidth","setBadgeWidth","prevBadgeWidth","usePrevious","positiveProgress","setPositiveProgress","negativeProgress","setNegativeProgress","badgeProgress","setBadgeProgress","layerProgress","setLayerProgress","showLayer","setShowLayer","disableMainProgressTransition","setDisableMainProgressTransition","disableLayerProgressTransition","setDisableLayerProgressTransition","hideMainLayer","setHideMainLayer","isCycling","setIsCycling","badgeActiveKey","shouldAnimateCaptionsRef","prevLeftText","prevRightText","prevIsNegative","CORNER_BEAK_THRESHOLD","BEAK_WIDTH_PX","BADGE_HORIZONTAL_PADDING_PX","updateBadgePosition","parentWidth","offsetWidth","halfBadgeWidth","minBadgeShift","maxBadgeShift","halfBeakWidth","currentShift","safeShift","min","newBeakPositionPx","clientWidth","forceUpdate","useForceUpdate","useSyncEffect","timeoutId","timeoutMs","LAYER_PROGRESS_TRANSITION_MS","window","shouldAnimateCaptions","hasFloatingBadge","displayLeftText","displayRightText","prevProgress","timers","targetProgress","setMainProgress","isForward","push","forEach","renderProgressLayer","isPositive","currentProgress","layerClassName","disableTransition","typeClass","buildStyle","Transition","shouldCleanup","width","viewBox","fill","d","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","isRemindMe","onScheduled","setOnScheduled","handleMessageSchedule","date","isWhenOnline","scheduledAt","getTime","Date","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","MediaSpoiler","isVisible","withAnimation","thumbDataUri","isNsfw","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","left","top","shiftY","setAttribute","prevRef","lastRef","resolveTransitionName","animationLevel","isDisabled","ANIMATION_LEVEL_MIN","ANIMATION_LEVEL_MED","IS_ANDROID","IS_IOS","useHorizontalScroll","containerRef","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","patternOpacity","clearBottomSector","patternSize","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","then","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","i","angle","xOffset","cos","yOffset","sin","sizeFactor","clientHeight","draw","canvas","ctx","getContext","clearRect","save","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","alpha","clamp","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","get","MAX_EFFECT_COUNT","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","chatId","messageId","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","text","formatIntegerCompact","paidCounter","counter","Reactions","message","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","getGlobal","recentReaction","key","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","toString","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","content","contentNotSupportedText","getMessageTextWithFallback","getTranslationFn","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","getMainUsername","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","contains","preventDefaultForScrollKeys","HTMLElement","element","tagName","toLowerCase","isTextBox","disableScrolling","_excludedClosestSelector","document","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","getUnreadChatsByFolderId","ReactionSelectorCustomReaction","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","ReactionSelector","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","color","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isConnected","blur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isInFocusList","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","createElement","innerHTML","parsedHtml","replace","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","trim","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","index","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","from","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","classList","messageEl","firstChild","removeChild","pop","parentNode","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","TargetIcon","xmlns","cx","cy","stroke","isFocusListShown","isActive","selectFocusListCount","FocusListButton","toggleFocusList","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","appendChild","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","poll","webPage","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","canAppendTodoList","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onOpenThread","onEdit","onAppendTodoList","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","onMoveToBottom","onAddToFocus","onRemoveFromFocus","onRemindMe","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","oldLang","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","canAddOrRemoveFromFocus","canRemindMe","canMoveToBottom","showEnsoActions","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","getMessageText","photo","getMessagePhoto","getWebPageVideo","getWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","handler","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","customIcon","MenuSeparator","messagesCount","option","withPreventDefaultOnMouseDown","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isMonoforum","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","selectWebPageFromMessage","storyData","selectPeerStory","selectCanGift","savedDialogId","selectSavedDialogIdFromMessage","todoItemsMax","todo","othersCanAppend","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","selectIsMessageInFocusList","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","openTodoListModal","forwardToSavedMessages","deleteMessages","addToFocusList","removeFromFocusList","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","requestRemindMeCalendar","remindMeCalendar","chatsById","chats","byId","usersById","users","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","selectMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","handleAddToFocus","force","handleRemoveFromFocus","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","monoforumPeerId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handleAppendTodoList","forNewTask","handlePin","handleUnpin","isUnpin","handleMoveToBottom","shouldDeleteForAll","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleRemindScheduleMessage","handleRemindMe","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}