{"version":3,"file":"5411.4b8dc362e7b73f227ea4.js","mappings":"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mgB,mBACAiF,kCAAmClL,EAASkL,kCAC5CrlB,gBACAyhB,2BACA6D,yBAA0B1H,GAAc0H,yBACxCC,gBAAiB3H,GAAc2H,gBAC/BxtB,mBACA4pB,qBACAC,0BACA4D,eAAgB96B,EAAU86B,iBAtLZxuC,CAplEwByuC,EAC1CvlC,OACA6hC,gBACA2D,gBACAxF,oBACA+B,yBACA0D,UACA3xB,WACAuZ,iBACAp1B,SACA2e,YACAuK,WACAie,sBACAtoB,mBACAuB,SACAphB,QACA4mC,gBACAkC,gBACAV,2BACA1J,wBACA2J,yBACA9B,iBACA5I,kBACAqN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAc,4BACAtR,gBACAoN,cACAC,oBACAzL,0BACAgN,aACAC,iBACAlE,wBACA+D,0BACAkD,oBACApD,uBACAM,oBACAG,uBACA5/B,mBACAC,iBACAu7B,eACA0F,gBACAnB,wBACAjF,yBACAC,4BACAI,qBACAC,iBACA4E,gBACAE,cACAE,sBACAE,eACA5E,cACAD,YACAa,gBACAX,kBACAE,uBACA4E,iBACA7W,cACAgX,sBACA3J,sBACAlN,SACAsS,YACArB,+BACAwH,4BACAC,mBACAt8B,WACA9S,aACAmrC,sBACAC,gBACA4C,iBACAE,yBACAvX,0BACAyS,qBACAiF,eACAD,uBACAG,sBACAC,gBACA/E,uBACA5F,kBACAH,aACAgL,2BACA5X,qBACAqT,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAb,mBACAiF,qCACArlB,gBACAyhB,2BACA8D,mBACAxtB,mBACA4pB,qBACAC,0BACA4D,kBACAO,cACAC,WACAC,UACAC,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,kBACdC,GAAiB,mBACjBC,GAAkB,qBAClBC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBjiB,GAAgB,oCAChBkiB,GAAmC,wBACnCC,GAAuB,cACvBC,GAAa,oBACbC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AAmB5T,IAAmB6T,gBACjCzG,GAAe0G,gBAAkB9T,IAAmB/J,iBACpDmX,GAAe2G,mBAAqB/T,IAAmBjK,gBAC5Dv7B,uBACAv6E,eAAgB/I,GAAawC,EAAAA,EAAAA,KAAqB5hB,EAAQkL,EAA6B,cAApB6U,QAAmCvf,EACtG60D,eAA0C,iBAAnBA,GAA8BA,QAAiB70D,EACtEo3I,eAAgBF,GAAYE,QAAiBp3I,EAC7Cs3I,iBAAkBJ,GAAYI,QAAmBt3I,EACjDu3I,oBAAqBL,GAAYK,QAAsBv3I,EACvDy3I,aAAcP,GAAYO,QAAez3I,EACzC03I,mBAAoBR,GAAYQ,QAAqB13I,EACrD23I,qBAAsBT,GAAYS,QAAuB33I,EACzDq5I,gBACAqC,KAAMl8I,EAAOm8I,mBAAmBjzH,MAChCixH,sBACAC,kBACAK,iBACA7wG,UACAud,QACAmzF,gBACA3kF,yBACA+yE,mBACAhiG,iBACA5lB,mBACA2d,eACAk8G,oBACAz0G,YAhPcnmC,CA1gDuBq8I,EACzClxI,UACAmxI,+BACAxmF,gCACAC,gCACA0yB,QACAtzB,YACAy7C,aACA4kC,iBACA+G,aACAlU,YACAmU,cACAC,iBACAC,kBACAC,cACAjH,kBACA52H,aACA89H,iBACAC,0BACApH,yBACAvnC,kBACAutC,mBACAqB,gBACAC,iBACA3mH,SACA8/G,mBACA54G,UACA84G,iBACAC,gBACAC,aACAG,eACAM,mBACAC,gBACAG,sBACAE,6BACAC,oBACAE,cACAD,kBACAE,eACArvH,kBACAktC,kBACA0jF,qBACA+C,qBACApmF,eACAmlF,mBACAnD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACAh7G,gBACAc,kBACAq4E,iBACAE,uBACAlrE,aACA4qG,WACAnf,YACA2hB,aACAztD,iBACA4tD,uBACAmB,sBACA+B,iBACAjqD,kBACA50E,cACAi+H,mBACAl7H,YACAq5H,mBACAtuG,sBACAywG,mBACAnf,2BACAn8G,mBACAk7H,gBACA54H,YACAozC,iBACA2qE,oBACA8a,oBACAC,sBACA54C,yBACA2lC,qBACAi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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatTags.module.scss?bf8a","webpack://telegram-t/./src/components/left/main/ChatTags.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/hooks/useStorage.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/common/helpers/preloadDocumentMedia.ts","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): Complete<StateProps> => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cgAMX02q\",\"tag\":\"oIgI9O0L\",\"tagColorMore\":\"hZDqIz3W\"};","import { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport styles from './ChatTags.module.scss';\n\nconst MAX_VISIBLE_TAGS = 3;\n\ntype OwnProps = {\n  folderIds?: number[];\n  orderedIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  activeChatFolder?: number;\n};\n\nconst ChatTags = ({\n  folderIds,\n  orderedIds,\n  chatFoldersById,\n  activeChatFolder,\n}: OwnProps) => {\n  const activeFolderId = activeChatFolder !== undefined && orderedIds ? orderedIds[activeChatFolder] : undefined;\n\n  const orderedFolderIds = useMemo(() => orderedIds?.filter((id) => {\n    const isFolder = folderIds?.includes(id);\n    const isActive = id === activeFolderId;\n    const isAll = id === ALL_FOLDER_ID;\n\n    const folder = chatFoldersById?.[id];\n    const hasColor = folder?.color !== undefined && folder.color !== -1;\n\n    return isFolder && !isActive && !isAll && hasColor;\n  }) || [], [orderedIds, folderIds, activeFolderId, chatFoldersById]);\n\n  const visibleFolderIds = orderedFolderIds.slice(0, MAX_VISIBLE_TAGS);\n  const remainingCount = orderedFolderIds.length - visibleFolderIds.length;\n\n  return (\n    <div className={styles.wrapper}>\n      {visibleFolderIds.map((folderId) => {\n        const folder = chatFoldersById?.[folderId];\n        return folder && (\n          <div\n            key={folder.id}\n            className={buildClassName(\n              'ChatTags',\n              styles.tag,\n              getApiPeerColorClass({ color: folder.color }),\n            )}\n          >\n            {renderTextWithEntities({\n              text: folder.title.text,\n              entities: folder.title.entities,\n              noCustomEmojiPlayback: folder.noTitleAnimations,\n              emojiSize: 12,\n            })}\n          </div>\n        );\n      })}\n      {remainingCount > 0 && (\n        <div className={`ChatTags ${styles.tag} ${styles.tagColorMore}`}>\n          +\n          {remainingCount}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChatTags);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiChatFolder,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getChatFolderIds } from '../../../util/folderManager';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatTags from './ChatTags';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n  withTags?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  folderIds?: number[];\n  orderedIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  activeChatFolder?: number;\n  areTagsEnabled?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n  folderIds,\n  orderedIds,\n  chatFoldersById,\n  activeChatFolder,\n  areTagsEnabled,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n    updateChatMutedState,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const shouldRenderTags = areTagsEnabled && withTags && folderIds && folderIds.length > 1;\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n    noForumTitle: shouldRenderTags,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    updateChatMutedState({ chatId, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleUnmute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    shouldRenderTags && 'chat-item-with-tags',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className={buildClassName('info', shouldRenderTags && 'has-tags')}>\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n        {shouldRenderTags && (\n          <ChatTags\n            folderIds={folderIds}\n            orderedIds={orderedIds}\n            chatFoldersById={chatFoldersById}\n            activeChatFolder={activeChatFolder}\n          />\n        )}\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      } as Complete<StateProps>;\n    }\n\n    const folderIds = getChatFolderIds(chatId);\n    const { areTagsEnabled } = global.chatFolders;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    const activeChatFolder = selectTabState(global).activeChatFolder;\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastMessageOutgoingStatus: isOutgoing && lastMessage ? selectOutgoingStatus(global, lastMessage) : undefined,\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n      folderIds,\n      orderedIds: global.chatFolders.orderedIds,\n      activeChatFolder,\n      chatFoldersById: global.chatFolders.byId,\n      areTagsEnabled: areTagsEnabled && isPremium,\n    };\n  },\n)(Chat));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm || switchWebview) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  threadId?: ThreadId;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, threadId, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({\n                  chatId: message.chatId, messageId: message.id, threadId, button,\n                })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): Complete<StateProps> => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n\n    const message = chatId ? selectChatMessage(global, chatId, messageId) : undefined;\n    return {\n      message,\n    };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          noCaptions={noCaptions}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): Complete<StateProps> => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo, useRef, useSignal, useState } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type { GlobalState, TabState } from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList,\n    ),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((\n    newHtml: string, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount && !shouldPrepend) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    if (shouldPrepend) {\n      const newFirstWord = newHtml.split(' ')[0];\n      const shouldReplace = getHtml().startsWith(newFirstWord);\n\n      setHtml(shouldReplace ? newHtml : `${newHtml}${getHtml()}`);\n    } else {\n      setHtml(`${getHtml()}${newHtml}`);\n    }\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId, shouldPrepend);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft, undefined, true);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        },\n      );\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = selectCustomEmoji(getGlobal(), reaction.documentId);\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"scheduled\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              threadId={threadId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): Complete<StateProps> => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setColor'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'setColor':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          color: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { useCallback, useEffect, useState } from '../lib/teact/teact';\n\ntype UseLocalStorageProps<T> = {\n  key: string;\n  initValue: T;\n};\n\nexport function useLocalStorage<T>({ key, initValue }: UseLocalStorageProps<T>):\n[value: T, setValue: (val: T) => void] {\n  const eventName = `update_storage_${key}`;\n\n  const getStoredValue: () => (T | undefined) = useCallback(() => {\n    const value = localStorage.getItem(key);\n    if (value !== null) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        console.error((e as Error).message);\n      }\n    }\n    return undefined;\n  }, [key]);\n\n  const writeValue: (value: T) => void = useCallback((value) => {\n    const stringifiedValue = JSON.stringify(value);\n    if (localStorage.getItem(key) !== stringifiedValue) {\n      localStorage.setItem(key, stringifiedValue);\n      window.dispatchEvent(new Event(eventName));\n    }\n  }, [eventName, key]);\n\n  const restoreValue: () => T = useCallback(() => {\n    const storedValue = getStoredValue();\n    if (storedValue !== undefined) {\n      return storedValue;\n    } else {\n      writeValue(initValue);\n      return initValue;\n    }\n  }, [getStoredValue, writeValue, initValue]);\n\n  const [state, setState] = useState<T>(restoreValue());\n\n  useEffect(() => {\n    const listenStorageChange = () => {\n      setState(restoreValue());\n    };\n    window.addEventListener(eventName, listenStorageChange);\n    return () => window.removeEventListener(eventName, listenStorageChange);\n  }, [eventName, restoreValue]);\n\n  const setStateSafe = (value: T) => {\n    try {\n      writeValue(value);\n    } catch (e) {\n      console.error((e as Error).message);\n    }\n  };\n\n  return [state, setStateSafe];\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage,\n  getMessageTextWithFallback,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageTextWithFallback(lang, message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(oldLang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">{lang('FileDropZoneTitle')}</div>\n        {!isGeneric && (\n          <div className=\"description\">\n            {isQuick ? lang('FileDropZoneQuick') : lang('FileDropZoneNoCompression')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const value = useMemo(() => {\n    if (age) {\n      return lang(\n        `ProfileBirthday${isToday ? 'Today' : ''}ValueYear`,\n        { date: formattedDate, age },\n        { pluralValue: age },\n      );\n    }\n\n    return lang(`ProfileBirthday${isToday ? 'Today' : ''}Value`, { date: formattedDate });\n  }, [age, formattedDate, isToday, lang]);\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(value)}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH, MUTE_INDEFINITE_TIMESTAMP, UNMUTE_TIMESTAMP,\n} from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleToggleNotifications = useLastCallback(() => {\n    const mutedUntil = isMuted ? UNMUTE_TIMESTAMP : MUTE_INDEFINITE_TIMESTAMP;\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        mutedUntil,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, mutedUntil });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon={isMuted ? 'unmute' : 'mute'} narrow ripple onClick={handleToggleNotifications}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): Complete<StateProps> => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_TAURI } from '../util/browser/globalEnvironment';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_TAURI ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics, handleUnmute,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      } as Complete<StateProps>;\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): Complete<StateProps> => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  withTags?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n          withTags={withTags}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n  noForumTitle?: boolean;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n  noForumTitle,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {\n        !noForumTitle && (\n          <>\n            {lastActiveTopic && (\n              <div className={styles.titleRow}>\n                <div\n                  className={buildClassName(\n                    styles.mainColumn,\n                    lastActiveTopic.unreadCount && styles.unread,\n                  )}\n                  ref={mainColumnRef}\n                  onClick={handleOpenTopicClick}\n                  onMouseDown={handleOpenTopicMouseDown}\n                >\n                  <TopicIcon\n                    topic={lastActiveTopic}\n                    observeIntersection={observeIntersection}\n                  />\n                  <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n                  {!overwrittenWidth && isReversedCorner && (\n                    <div className={styles.afterWrapper}>\n                      <div className={styles.after} />\n                    </div>\n                  )}\n                </div>\n\n                <div className={styles.otherColumns}>\n                  {otherTopics.map((topic) => (\n                    <div\n                      className={buildClassName(\n                        styles.otherColumn, topic.unreadCount && styles.unread,\n                      )}\n                      key={topic.id}\n                    >\n                      <TopicIcon\n                        topic={topic}\n                        className={styles.otherColumnIcon}\n                        observeIntersection={observeIntersection}\n                      />\n                      <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.ellipsis} />\n              </div>\n            )}\n            {!lastActiveTopic && (\n              <div className={buildClassName(styles.titleRow, styles.loading)}>\n                {lang('Loading')}\n              </div>\n            )}\n          </>\n        )\n      }\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && !noForumTitle && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n  noForumTitle,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n  noForumTitle?: boolean;\n}) {\n  const lang = useLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('ChatDraftPrefix')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(lang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n          noForumTitle={noForumTitle}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): Complete<StateProps> => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { getGlobal, setGlobal } from '../../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../../api/types';\n\nimport {\n  getDocumentMediaHash, getMediaFormat, getMessageDocumentPhoto, getMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { updateChatMessage } from '../../../global/reducers';\nimport { selectChatMessage } from '../../../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { preloadImage, preloadVideo } from '../../../util/files';\nimport { fetch } from '../../../util/mediaLoader';\nimport LimitedMap from '../../../util/primitives/LimitedMap';\n\nconst preloadedHashes = new LimitedMap<string, void>(100);\n\nexport async function preloadDocumentMedia(mediaContainer: ApiMessage) {\n  const video = getMessageDocumentVideo(mediaContainer);\n  const photo = getMessageDocumentPhoto(mediaContainer);\n\n  const media = video || photo;\n\n  // Skip large photos that were not processed by the server\n  const shouldSkipPhoto = photo && photo.mediaSize && !photo.mediaSize.fromDocumentAttribute;\n  if (!media || media.previewBlobUrl || shouldSkipPhoto) {\n    return;\n  }\n\n  const hash = getDocumentMediaHash(media, 'full');\n  if (!hash || preloadedHashes.has(hash)) {\n    return;\n  }\n\n  preloadedHashes.set(hash, undefined);\n\n  const url = await fetch(hash, getMediaFormat(media, 'full'));\n  if (!url) {\n    return;\n  }\n\n  let dimensions: ApiDocument['mediaSize'] | undefined;\n\n  if (video && IS_PROGRESSIVE_SUPPORTED) {\n    const videoEl = await preloadVideo(url);\n    dimensions = { width: videoEl.videoWidth, height: videoEl.videoHeight, fromPreload: true };\n  }\n\n  if (photo) {\n    const img = await preloadImage(url);\n    dimensions = { width: img.naturalWidth, height: img.naturalHeight, fromPreload: true };\n  }\n\n  if (!dimensions || dimensions.width <= 0 || dimensions.height <= 0) {\n    return;\n  }\n\n  let global = getGlobal();\n  const message = selectChatMessage(global, mediaContainer.chatId, mediaContainer.id);\n  if (!message || !message.content.document) return;\n  global = updateChatMessage(global, mediaContainer.chatId, mediaContainer.id, {\n    content: {\n      ...message.content,\n      document: {\n        ...message.content.document,\n        mediaSize: dimensions,\n      },\n    },\n  });\n  setGlobal(global);\n}\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport { preloadDocumentMedia } from './helpers/preloadDocumentMedia';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, timestamp, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && document.mediaSize\n    && !document.mediaSize.fromDocumentAttribute && !document.mediaSize.fromPreload;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  useEffect(() => {\n    const fileEl = ref.current;\n    if (!withMediaViewer || !fileEl || !message) return;\n\n    const onHover = () => {\n      preloadDocumentMedia(message);\n    };\n\n    fileEl.addEventListener('mouseenter', onHover);\n\n    return () => {\n      fileEl.removeEventListener('mouseenter', onHover);\n    };\n  }, [withMediaViewer, message]);\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): Complete<StateProps> => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const mediaData = mediaHash\n    ? (isStreaming ? mediaLoader.getProgressiveUrl(mediaHash)\n      : mediaLoader.getFromMemory(mediaHash)) : undefined;\n\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"userRatingNegativeWrapper\":\"_1NuEm_bF\",\"userRatingWrapper\":\"Ura8xDvW\",\"ratingNegativeIcon\":\"MwbjmAph\",\"ratingIcon\":\"lks6uKRt\",\"ratingLevel\":\"dco9YF7C\",\"userStatus\":\"jwNQ18lU\",\"getStatus\":\"xzCgzBx8\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserFullInfo, ApiUserStatus,\n} from '../../api/types';\nimport type { AnimationLevel } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState.ts';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { resolveTransitionName } from '../../util/resolveTransitionName.ts';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\nconst MAX_LEVEL_ICON = 90;\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userFullInfo?: ApiUserFullInfo;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    animationLevel: AnimationLevel;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userFullInfo,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n    openProfileRatingModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  const handleRatingClick = useLastCallback((level: number) => {\n    if (user) {\n      openProfileRatingModal({ userId: user.id, level });\n    }\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={oldLang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderUserRating() {\n    if (!userFullInfo?.starsRating) return undefined;\n\n    const level = userFullInfo.starsRating.level;\n    const isNegative = level < 0;\n\n    const onRatingClick = () => handleRatingClick(level);\n\n    if (isNegative) {\n      return (\n        <span className={styles.userRatingNegativeWrapper} onClick={onRatingClick}>\n          <Icon\n            name=\"rating-icons-negative\"\n            className={styles.ratingNegativeIcon}\n          />\n          <span className={styles.ratingLevel}>!</span>\n        </span>\n      );\n    }\n\n    const safeLevel = Math.max(level, 1);\n    const iconLevel = Math.min(safeLevel, MAX_LEVEL_ICON);\n    const iconName = (iconLevel < 10\n      ? `rating-icons-level${iconLevel}`\n      : `rating-icons-level${Math.floor(iconLevel / 10) * 10}`) as IconName;\n\n    return (\n      <span className={styles.userRatingWrapper} onClick={onRatingClick}>\n        <Icon\n          name={iconName}\n          className={styles.ratingIcon}\n        />\n        <span className={styles.ratingLevel}>{level}</span>\n      </span>\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          {renderUserRating()}\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition\n          activeKey={currentPhotoIndex}\n          name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, oldLang.isRtl)}\n        >\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={oldLang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={oldLang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={oldLang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): Complete<StateProps> => {\n    const user = selectUser(global, peerId);\n    const userFullInfo = user ? selectUserFullInfo(global, peerId) : undefined;\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? selectCustomEmoji(global, emojiStatus.documentId) : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userFullInfo,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      topic,\n      messagesCount: topic ? selectThreadMessagesCount(global, peerId, currentTopicId!) : undefined,\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectCustomEmoji, selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = selectCustomEmoji(global, documentId);\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            spellCheck={IS_TAURI ? false : undefined}\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): Complete<StateProps> => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): Complete<StateProps> => {\n    if (!typingStatus.userId) {\n      return { typingUser: undefined };\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): Complete<StateProps> => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n    updateTopicMutedState,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    updateTopicMutedState({ chatId, topicId: topic.id, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n    handleUnmute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute, handleUnmute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    let removeTauriListener: VoidFunction | undefined;\n    const setupTauriListener = async () => {\n      const tauriWindow = await window.tauri?.getCurrentWindow();\n      removeTauriListener = await tauriWindow.onResized(() => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n    };\n\n    if (IS_TAURI) {\n      window.tauri?.getCurrentWindow().then((tauriWindow) => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n      setupTauriListener();\n    }\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeTauriListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_TAURI && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n  selectCustomEmoji,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = selectCustomEmoji(global, customEmojiId);\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): Complete<StateProps> => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  threadId,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): Complete<StateProps> => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport { IS_ANDROID, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    noReactions?: boolean;\n    appearAsNotOwn?: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n    isInFocusList?: boolean;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  noReactions,\n  appearAsNotOwn,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  isInFocusList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_TAURI,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = appearAsNotOwn ? false : isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = noReactions ? false : reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  ) || isInFocusList;\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canMarkAsRead = isChatWithSelf || isInFocusList;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleMarkAsRead,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n    isInFocusList,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n    isInFocusList,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            threadId={threadId}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {canMarkAsRead && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-primary\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Done\"\n                  onClick={handleMarkAsRead}\n                >\n                  <Icon name=\"check\" />\n                </Button>\n              )}\n              {!isInFocusList && (\n                <>\n                  {withCommentButton && isCustomShape && (\n                    <CommentButton\n                      threadInfo={repliesThreadInfo}\n                      disabled={noComments}\n                      isLoading={isLoadingComments}\n                      isCustomShape\n                      asActionButton\n                    />\n                  )}\n                  {canForward && (\n                    <Button\n                      className=\"message-action-button\"\n                      color=\"translucent-white\"\n                      round\n                      size=\"tiny\"\n                      ariaLabel={oldLang('lng_context_forward_msg')}\n                      onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                    >\n                      <Icon name=\"share-filled\" />\n                    </Button>\n                  )}\n                  {canFocus && (\n                    <Button\n                      className=\"message-action-button\"\n                      color=\"translucent-white\"\n                      round\n                      size=\"tiny\"\n                      ariaLabel={lang('FocusMessage')}\n                      onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                    >\n                      <Icon name=\"arrow-right\" />\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      outgoingStatus: isOutgoing ? selectOutgoingStatus(global, message, messageListType === 'scheduled') : undefined,\n      uploadProgress: typeof uploadProgress === 'number' ? uploadProgress : undefined,\n      focusDirection: isFocused ? focusDirection : undefined,\n      noFocusHighlight: isFocused ? noFocusHighlight : undefined,\n      isResizingContainer: isFocused ? isResizingContainer : undefined,\n      focusedQuote: isFocused ? focusedQuote : undefined,\n      focusedQuoteOffset: isFocused ? focusedQuoteOffset : undefined,\n      scrollTargetPosition: isFocused ? scrollTargetPosition : undefined,\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser, ApiWebPage } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMainUsername, getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n  isInFocusList,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n  isInFocusList?: boolean;\n}) {\n  const {\n    openChat, openChatWithDraft, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages, deleteMessages, removeFromFocusList\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChatWithDraft({\n      chatId,\n      threadId,\n      text: {\n        text: `@${getMainUsername(botSender)} `,\n      },\n    });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleMarkAsRead = useLastCallback(() => {\n    if (isInFocusList) {\n      removeFromFocusList({ chatId, messageId });\n    } else {\n      deleteMessages({ messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleMarkAsRead,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  noCaptions?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  noCaptions,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (noCaptions) {\n      return lang('EmbeddedMessageNoCaption');\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","reduce","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","isDisabled","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","window","innerWidth","requestMutation","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","passive","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","useRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","Math","floor","Date","now","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","Array","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","fill","in2","operator","scale","xChannelSelector","yChannelSelector","forceShowSelf","isSynced","userStatus","selectUserStatus","isSavedMessages","isSelf","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","ripple","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","openMediaViewer","loadMoreProfilePhotos","hasAvatarMediaViewer","peerId","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","stopPropagation","isAvatarView","mediaIndex","origin","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","buildClassName","dir","isRtl","Avatar","size","storyViewerMode","onClick","FullNameTitle","withEmojiStatus","DotAnimation","content","subtitleKey","TypingStatus","isSystemBot","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","ChatCallStatus","isSelected","isMobile","ChatTags","folderIds","chatFoldersById","activeChatFolder","activeFolderId","orderedFolderIds","isFolder","isAll","ALL_FOLDER_ID","folder","hasColor","color","visibleFolderIds","slice","remainingCount","folderId","getApiPeerColorClass","renderTextWithEntities","text","entities","noCustomEmojiPlayback","noTitleAnimations","emojiSize","isPreview","previewMessageId","selectChat","getChatFolderIds","areTagsEnabled","chatFolders","isPremium","selectIsCurrentUserPremium","lastMessageId","selectChatLastMessageId","lastMessage","selectChatMessage","selectChatLastMessage","isOutgoing","forwardInfo","savedDialogSender","fromId","selectPeer","messageSender","selectSender","lastMessageSender","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","isSelectedForum","isForum","selectTabState","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","storyData","lastMessageStory","selectPeerStory","isAccountFrozen","selectIsCurrentUserFrozen","monoforumChannel","selectMonoforumChannel","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topics","topicsById","Chat","orderDiff","animationType","isPinned","observeIntersection","offsetTop","onDragEnter","withTags","openChat","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","updateChatMutedState","useAppLayout","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","shouldRenderTags","renderSubtitle","ref","useChatListEntry","statefulMediaContent","groupStatefulContent","story","noForumTitle","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","handleClick","noForumTopicPanel","value","forceOnHeavyAnimation","force","shouldReplaceHistory","handleDragEnter","preventDefault","handleDelete","handleMute","handleUnmute","mutedUntil","UNMUTE_TIMESTAMP","handleChatFolderChange","handleReport","messageIds","contextActions","useChatContextActions","isIntersecting","useIsIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","isUserId","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","monoforumBadgeClassName","LastMessageMeta","outgoingStatus","draftDate","date","hasMiniApp","hasMainMiniApp","DeleteChatModal","onCloseAnimationEnd","MuteChatModal","ChatFolderModal","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","settings","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","loadPeerStoriesByIds","loadStoryThrottled","throttled","throttle","storyIds","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","classList","add","body","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","handlePaste","async","clipboardData","input","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","querySelectorAll","getElementsByTagName","removeAttribute","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","pluralValue","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","cb","requestMeasure","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","round","onerror","delayStop","max","setTimeout","pause","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","theme","shouldCollectDebugLogs","canEditMedia","editingMessage","paidMessagesStars","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","oldLang","ResponsiveHoverButton","onActivate","ariaLabel","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","_Fragment","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","Button","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","isForwarding","forwardedMessages","replyInfo","suggestedPostInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","selectForwardedSender","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","isContextMenuDisabled","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","isShown","shouldRender","transitionClassNames","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","WebPagePreview","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","useShowTransition","withShouldRender","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","useMedia","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handleBeforeContextMenu","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","PeerColorWrapper","noUserColors","onMouseDown","src","siteName","url","description","webPage","photo","video","audio","MainButtonState","chatBot","selectBot","isChatWithBot","isChatWithUser","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","selectTheme","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","useSignal","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","shouldPrepend","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","newFirstWord","shouldReplace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","EDITABLE_INPUT_CSS_SELECTOR","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","price","currency","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","adminRights","anonymous","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","selectCustomEmoji","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","direction","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","peers","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","isRestricted","selectIsChatRestricted","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","clearTimeout","wasTopicOpened","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","Video","isOwn","isInWebPage","noAvatars","canAutoLoad","canAutoPlay","uploadProgress","forcedWidth","dimensions","asForwarded","isDownloading","isProtected","lastPlaybackTimestamp","clickArg","observeIntersectionForLoading","observeIntersectionForPlaying","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","mediaType","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","noMountTransition","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","media","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","canPlay","defaultMuted","muted","loop","playsInline","disablePictureInPicture","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","isGif","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","withPortal","onLoad","onSearchOpen","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","calculateMediaDimensions","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","messages","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","useLocalStorage","initValue","eventName","getStoredValue","localStorage","getItem","JSON","parse","writeValue","stringifiedValue","stringify","setItem","restoreValue","storedValue","setState","listenStorageChange","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageTextWithFallback","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","Link","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","TopicIcon","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","onStart","onEnd","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","end","cancel","useUnmountCleanup","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","container","useCommonAncestor","sel","cloneRange","intersectsNode","contains","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","index","inputSelector","getRange","setRange","onSelectionChange","Element","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","handleDragLeave","relatedTarget","toTarget","onDrop","onDragLeave","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","a","b","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","canGiftPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","containerRef","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","chats","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleToggleNotifications","MUTE_INDEFINITE_TIMESTAMP","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","idx","stopEvent","dataTransferItems","traverseFileTreePromise","entry","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","IS_TAURI","togglePinned","actionPin","actionDelete","compact","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isAnonymousForwardsChat","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","IS_APP","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","handleResize","useThrottledCallback","useResizeObserver","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transform","zIndex","String","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","chatsById","arr","isLast","getChatTitle","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","handleKeyDown","IS_MAC_OS","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","clientX","clientY","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onLoadMore","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","Photo","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","extension","timestamp","thumbnailDataUri","previewData","smaller","isSelectable","actionIcon","onDateClick","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaHash","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","renderSummary","Opacity","opacity","Move","ANIMATION_END_DELAY","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","time","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","senderId","preloadedHashes","LimitedMap","Document","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutFiles","onMediaClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","fromPreload","fileEl","onHover","mediaContainer","getMessageDocumentVideo","getMessageDocumentPhoto","shouldSkipPhoto","fetch","IS_PROGRESSIVE_SUPPORTED","videoEl","naturalWidth","naturalHeight","updateChatMessage","setGlobal","preloadDocumentMedia","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","isDocumentVideo","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","formatTemperature","temperatureC","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","handleScroll","isScrolled","scrollTop","toggleExtraClass","addExtraClass","removeExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","canvas","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","AvatarList","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isOwnMessage","isReverse","withAvatar","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","getContext","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","Progressive","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","ProfilePhoto","canPlayVideo","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","ProfileInfo","isForMonoforum","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openProfileRatingModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","handleRatingClick","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","canCopyTitle","isSystemBotChat","renderUserRating","isReadDateRestrictedByMe","renderStatus","starsRating","onRatingClick","safeLevel","iconLevel","iconName","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","isGraph","obj","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","scrollHeight","newHeight","isOverflown","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","spellCheck","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","getMessageHtmlId","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","RoundVideo","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeTauriListener","tauri","getCurrentWindow","tauriWindow","onResized","setupTauriListener","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","extendedMedia","singularMedia","accumulate","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","paidMedia","getMessageContent","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","peerColor","shouldReset","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","selectCanAutoPlayMedia","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","getMessageText","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","buttonType","Invoice","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","starsAmount","getPercentage","total","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","Poll","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","openStoryViewer","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","TodoList","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","gift","stickerRef","backdrop","model","pattern","getGiftAttributes","isHover","markHover","unmarkHover","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","WebPage","messageWebPage","backgroundEmojiId","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getPhotoFullDimensions","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isSafe","caption","isRectangular","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","selectMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","noReactions","appearAsNotOwn","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","isInFocusList","memoFirstUnreadIdRef","onIntersectPinnedMessage","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canMarkAsRead","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleMarkAsRead","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","deleteMessages","removeFromFocusList","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","detectLanguage","useTextLanguage","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","getMessageWebPage","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","scheduleDate","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","EmbeddedMessage","forwardSender","Story","StoryMention","MessageAppendix","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","formatScheduledDateTime","getMediaContentTypeDescription","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}